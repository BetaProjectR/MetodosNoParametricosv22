knitr::opts_chunk$set(echo = FALSE)
library(readxl)
library(ggplot2)
library(dplyr)
library(knitr)
library(kableExtra)
knitr::include_graphics("Cluster_clasificacion.png")
knitr::include_graphics("CKmeans.png")
knitr::include_graphics("Kmeans.png")
knitr::include_graphics("Kmeans.png")
knitr::include_graphics("Abundancia.png")
knitr::include_graphics("Jacard_ejemplo.png")
knitr::include_graphics("Jacard.png")
knitr::opts_chunk$set(echo = TRUE)
library(stats)
library(readxl)
library(dplyr)
library(vegan)
library(psych)
library(cluster)
library(factoextra)
poliqueto <- read_excel("poliquetos.xlsx", sheet = 1)
summary(poliqueto)
poliqueto$Estaciones <- as.factor(poliqueto$Estaciones)
str(poliqueto)
pairs.panels(poliqueto[2:4])
# Crea nuevas variables
val_estandarizado <- poliqueto %>%
select(S, H, J) %>%
mutate(
S1 = (S - mean(S)) / sd(S),
J1 = (J - mean(J)) / sd(J),
H1 = (H - mean(H)) / sd(H))
pairs.panels(val_estandarizado[4:6])
# distance matrix
d <- dist(val_estandarizado[4:6], method = "euclidean")
d
# distance matrix
d <- dist(val_estandarizado[4:6], method = "euclidean")
d[1:6]
# distance matrix
d <- dist(val_estandarizado[4:6], method = "euclidean")
d[1:6;1:6]
# distance matrix
d <- dist(val_estandarizado[4:6], method = "euclidean")
d[1:6,1:6]
# distance matrix
d <- dist(val_estandarizado[4:6], method = "euclidean")
d[6,6]
# distance matrix
d <- dist(val_estandarizado[4:6], method = "euclidean")
matrix(d[6,6])
# distance matrix
d <- dist(val_estandarizado[4:6], method = "euclidean")
dim(d)
fit <- hclust(d, method="average")
plot(fit)
# distance matrix
d <- dist(val_estandarizado[4:6], method = "euclidean")
as.matrix(d) %>% d[6,6]
as.matrix(d)
# distance matrix
d <- dist(val_estandarizado[4:6], method = "euclidean")
d_matriz <- as.matrix(d)
d_matriz[6,6]
# distance matrix
d <- dist(val_estandarizado[4:6], method = "euclidean")
d_matriz <- as.matrix(d)
d_matriz[1:6,1:6]
poliqueto <- scale(poliqueto[2:4])
poliqueto <- scale(poliqueto[2:4])
poliqueto
distance <- get_dist(poliqueto, method = "euclidean")
fviz_dist(distance)
k2 <- kmeans(poliqueto, centers = 2, nstart = 25)
fviz_cluster(k2, data = poliqueto)
k2 <- kmeans(poliqueto, centers = 2, nstart = 25)
fviz_cluster(k2, data = poliqueto)
poliqueto <- read_excel("poliquetos.xlsx", sheet = 1)
summary(poliqueto)
poliqueto$Estaciones <- as.factor(poliqueto$Estaciones)
str(poliqueto)
View(poliqueto)
poliqueto <- scale(poliqueto[2:4])
poliqueto
distance <- get_dist(poliqueto, method = "euclidean")
fviz_dist(distance)
k2 <- kmeans(poliqueto, centers = 2, nstart = 25)
fviz_cluster(k2, data = poliqueto)
k3 <- kmeans(poliqueto, centers = 3, nstart = 25)
fviz_cluster(k3, data = poliqueto)
k4 <- kmeans(poliqueto, centers = 4, nstart = 25)
fviz_cluster(k4, data = poliqueto)
k2 <- kmeans(poliqueto, centers = 2, nstart = 25)
fviz_cluster(k2, data = poliqueto)
k3 <- kmeans(poliqueto, centers = 3, nstart = 25)
fviz_cluster(k3, data = poliqueto)
k4 <- kmeans(poliqueto, centers = 4, nstart = 25)
fviz_cluster(k4, data = poliqueto)
fviz_nbclust(poliqueto, kmeans, method = "wss")
fviz_nbclust(poliqueto, kmeans, method = "wss")
print.summary(fviz_nbclust(poliqueto, kmeans, method = "wss"))
cluster <- fviz_nbclust(poliqueto, kmeans, method = "wss")
cluster <- fviz_nbclust(poliqueto, kmeans, method = "wss")
cluster
View(cluster)
cluster[["labels"]]
cluster[["plot_env"]]
cluster[["facet"]]
cluster[["data"]]
cluster[["layers"]]
cluster[["theme"]]
cluster <- fviz_nbclust(poliqueto, kmeans, method = "silhouette")
cluster
k2 <- kmeans(poliqueto, centers = 2, nstart = 25)
fviz_cluster(k2, data = poliqueto)+labs(subtitle = "Cluster no jerarquico = 2 grupos.")
k3 <- kmeans(poliqueto, centers = 3, nstart = 25)
fviz_cluster(k3, data = poliqueto)+labs(subtitle = "Cluster no jerarquico = 3 grupos.")
k4 <- kmeans(poliqueto, centers = 4, nstart = 25)
fviz_cluster(k4, data = poliqueto)+labs(subtitle = "Cluster no jerarquico = 4 grupos.")
library("AER")
library("MASS")
library("knitr")
library("readxl")
library("tidyverse")
library("data.table")
knitr::opts_chunk$set(echo = TRUE)
sheep <- fread("../model_extensions_data/sheep_reduced.raw")
sheep <- dplyr::select(sheep, -c(FID,PAT,MAT,SEX,PHENOTYPE))
phenotypes <- fread("../model_extensions_data/sheep_phenotypes.txt", header = TRUE)
sheep$phenotype <- phenotypes$pheno_2[match(sheep$IID,phenotypes$IID)]
sheep$breed <- phenotypes$Breed[match(sheep$IID,phenotypes$IID)]
sheep$phenotype <- factor(sheep$phenotype)
p <- ggplot(sheep, aes(x = phenotype)) + geom_bar(aes(fill=phenotype))
p <- p + facet_wrap(~breed)
p
maf <- function(x) {
n_bb = sum(x == 0)
n_ab = sum(x == 1)
freq = (n_bb+0.5*n_ab)/length(x)
return(freq)
}
maf_vec <- sheep %>%
summarise(across(where(is.numeric), maf)) %>%
gather(key = "snp", value = "maf")
maf_vec <- filter(maf_vec, maf < 0.95 & maf > 0.05)
sheep <- sheep[,-1] ## remove IDs
vec <- names(sheep) %in% maf_vec$snp
vec[length(vec)-1] = TRUE ## phenotype
vec[length(vec)] = TRUE ## breed
## removing SNP with low MAF
sheep <- sheep[,vec,with=FALSE]
dataset <- sheep[,c("phenotype","breed")]
snps <- dplyr::select(sheep, -c(phenotype,breed))
results = data.frame("SNP"=NULL,"P"=NULL)
for (i in 1:ncol(snps)) {
dataset$snp <- snps[,i,with=FALSE]
snp_name <- gsub("_[A-Z]$","",names(snps)[i])
OLRmodel <- polr(phenotype ~ . , data = dataset, Hess = TRUE, method = "logistic") ## you can select logistic or probit as method
p_value <- coeftest(OLRmodel)["snp","Pr(>|z|)"]
results = rbind.data.frame(results,data.frame("SNP"=snp_name,"P"=p_value))
}
snp_map <- fread("../model_extensions_data/sheep_reduced.map")
names(snp_map) <- c("CHR","SNP","cM","BP")
snp_map <- dplyr::select(snp_map, -cM)
results <- results %>% inner_join(snp_map, by = "SNP") %>% dplyr::select(SNP,CHR,BP,P)
library("qqman")
manhattan(results, suggestiveline = FALSE, col = c("red","blue"), logp = TRUE)
View(snps)
