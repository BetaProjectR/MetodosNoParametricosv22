# Cambio clase año por harvest date
qt$`CLASE AÑO` <- as.factor(qt$`CLASE AÑO`)
levels(qt$`CLASE AÑO`) <- c("2007","2010","2013","2016","2019")
h <- levels(as.factor(qt$`CLASE AÑO`))
#h07 <- qt$`CLASE AÑO` == h[1]
h10 <- qt$`CLASE AÑO` == h[2]
h13 <- qt$`CLASE AÑO` == h[3]
h16 <- qt$`CLASE AÑO` == h[4]
h19 <- qt$`CLASE AÑO` == h[5]
t <- m$SGR_HARVEST
###
#g07 <- density(na.omit(t[h07]))
g10 <- density(na.omit(t[h10]))
g13 <- density(na.omit(t[h13]))
g16 <- density(na.omit(t[h16]))
g19 <- density(na.omit(t[h19]))
lmin <- min(na.omit(t))
lmax <- max(na.omit(t))
jmax <- max(g10$y,g13$y,g16$y,g19$y)
par(mfrow=c(2,1), cex = 0.5)
plot(g10, xlab = u, xlim = c(lmin, lmax), ylim = c(0,jmax), main = "")
lines(g13, lty=2, col = 2)
lines(g16, lty=3, col = 3)
lines(g19, lty=4, col = 4)
legend("topright", legend = h[-1], col = c(1:4), lty = c(1:4), bty = "n")
df2 <- droplevels(m[-which(m$`CLASE AÑO`=="2007"), ])
boxplot(df2$SGR_HARVEST ~ df2$`CLASE AÑO`,
xlab = w, ylab = NULL, main=u, outline=FALSE, col=c("dodgerblue4","dodgerblue3","dodgerblue2","dodgerblue"),
par(cex.lab=1.2), # is for y-axis
par(cex.axis=1.2), ylim=c(0.5,1.3))
text(x= 1, y= 1.3, labels= "Loncochalgua", font=2)
text(x= 2, y=1.3, labels= "Edwards", font=2)
text(x= 3, y=1.3, labels= "Porcelana", font=2)
text(x= 4, y=1.3, labels= "Edwards", font=2)
text(x= 5, y= 1.3, labels= "Loncochalgua", font=2)
boxplot(df2$SGR_HARVEST ~ df2$`CLASE AÑO`,
xlab = w, ylab = NULL, main=u, outline=FALSE, col=c("dodgerblue4","dodgerblue3","dodgerblue2","dodgerblue"),
par(cex.lab=1.2), # is for y-axis
par(cex.axis=1.2), ylim=c(0.5,1.3))
text(x= 1, y= 1.3, labels= "Loncochalgua", font=2)
text(x= 2, y=1.3, labels= "Edwards", font=2)
text(x= 3, y=1.3, labels= "Porcelana", font=2)
text(x= 4, y=1.3, labels= "Edwards", font=2)
text(x= 5, y= 1.3, labels= "Loncochalgua", font=2)
plot(g10, xlab = u, xlim = c(lmin, lmax), ylim = c(0,jmax), main = "")
lines(g13, lty=2, col = 2)
lines(g16, lty=3, col = 3)
lines(g19, lty=4, col = 4)
legend("topright", legend = h[-1], col = c(1:4), lty = c(1:4), bty = "n")
boxplot(df2$SGR_HARVEST ~ df2$`CLASE AÑO`,
xlab = w, ylab = NULL, main=u, outline=FALSE, col=c("dodgerblue4","dodgerblue3","dodgerblue2","dodgerblue"),
par(cex.lab=1.2), # is for y-axis
par(cex.axis=1.2), ylim=c(0.5,1.3))
m <- qt[c("SGR_HARVEST", "CLASE AÑO")]
u <- "SGR - INFORMANTES"
w <- "YEAR CLASS - SPAWNING"
w <- "HARVEST YEAR"
# Cambio clase año por harvest date
qt$`CLASE AÑO` <- as.factor(qt$`CLASE AÑO`)
levels(qt$`CLASE AÑO`) <- c("2007","2010","2013","2016","2019")
h <- levels(as.factor(qt$`CLASE AÑO`))
#h07 <- qt$`CLASE AÑO` == h[1]
h10 <- qt$`CLASE AÑO` == h[2]
h13 <- qt$`CLASE AÑO` == h[3]
h16 <- qt$`CLASE AÑO` == h[4]
h19 <- qt$`CLASE AÑO` == h[5]
t <- m$SGR_HARVEST
###
#g07 <- density(na.omit(t[h07]))
g10 <- density(na.omit(t[h10]))
g13 <- density(na.omit(t[h13]))
g16 <- density(na.omit(t[h16]))
g19 <- density(na.omit(t[h19]))
lmin <- min(na.omit(t))
lmax <- max(na.omit(t))
jmax <- max(g10$y,g13$y,g16$y,g19$y)
par(mfrow=c(2,1), cex = 0.5)
plot(g10, xlab = u, xlim = c(lmin, lmax), ylim = c(0,jmax), main = "")
lines(g13, lty=2, col = 2)
lines(g16, lty=3, col = 3)
lines(g19, lty=4, col = 4)
legend("topright", legend = h[-1], col = c(1:4), lty = c(1:4), bty = "n")
df2 <- droplevels(m[-which(m$`CLASE AÑO`=="2007"), ])
boxplot(df2$SGR_HARVEST ~ df2$`CLASE AÑO`,
xlab = w, ylab = NULL, main=u, outline=FALSE, col=c("dodgerblue4","dodgerblue3","dodgerblue2","dodgerblue"),
par(cex.lab=1.2), # is for y-axis
par(cex.axis=1.2), ylim=c(0.5,1.3))
text(x= 1, y= 1.3, labels= "Loncochalgua", font=2)
text(x= 2, y=1.3, labels= "Edwards", font=2)
text(x= 3, y=1.3, labels= "Porcelana", font=2)
text(x= 4, y=1.3, labels= "Edwards", font=2)
text(x= 5, y= 1.3, labels= "Loncochalgua", font=2)
m <- qt[c("SGR_HARVEST", "CLASE AÑO")]
u <- "SGR - INFORMANTES"
w <- "YEAR CLASS - SPAWNING"
w <- "HARVEST YEAR"
# Cambio clase año por harvest date
qt$`CLASE AÑO` <- as.factor(qt$`CLASE AÑO`)
levels(qt$`CLASE AÑO`) <- c("2007","2010","2013","2016","2019")
h <- levels(as.factor(qt$`CLASE AÑO`))
#h07 <- qt$`CLASE AÑO` == h[1]
h10 <- qt$`CLASE AÑO` == h[2]
h13 <- qt$`CLASE AÑO` == h[3]
h16 <- qt$`CLASE AÑO` == h[4]
h19 <- qt$`CLASE AÑO` == h[5]
t <- m$SGR_HARVEST
###
#g07 <- density(na.omit(t[h07]))
g10 <- density(na.omit(t[h10]))
g13 <- density(na.omit(t[h13]))
g16 <- density(na.omit(t[h16]))
g19 <- density(na.omit(t[h19]))
lmin <- min(na.omit(t))
lmax <- max(na.omit(t))
jmax <- max(g10$y,g13$y,g16$y,g19$y)
par(mfrow=c(2,1), cex = 0.5)
plot(g10, xlab = u, xlim = c(lmin, lmax), ylim = c(0,jmax), main = "")
lines(g13, lty=2, col = 2)
lines(g16, lty=3, col = 3)
lines(g19, lty=4, col = 4)
legend("topright", legend = h[-1], col = c(1:4), lty = c(1:4), bty = "n")
df2 <- droplevels(m[-which(m$`CLASE AÑO`=="2007"), ])
boxplot(df2$SGR_HARVEST ~ df2$`CLASE AÑO`,
xlab = w, ylab = NULL, main=u, outline=FALSE, col=c("dodgerblue4","dodgerblue3","dodgerblue2","dodgerblue"),
par(cex.lab=1.2), # is for y-axis
par(cex.axis=1.2), ylim=c(0.5,1.3))
text(x= 2, y=1.3, labels= "Edwards", font=2)
text(x= 3, y=1.3, labels= "Porcelana", font=2)
text(x= 4, y=1.3, labels= "Edwards", font=2)
text(x= 5, y= 1.3, labels= "Loncochalgua", font=2)
m <- qt[c("SGR_HARVEST", "CLASE AÑO")]
u <- "SGR - INFORMANTES"
w <- "YEAR CLASS - SPAWNING"
w <- "HARVEST YEAR"
# Cambio clase año por harvest date
qt$`CLASE AÑO` <- as.factor(qt$`CLASE AÑO`)
levels(qt$`CLASE AÑO`) <- c("2007","2010","2013","2016","2019")
h <- levels(as.factor(qt$`CLASE AÑO`))
#h07 <- qt$`CLASE AÑO` == h[1]
h10 <- qt$`CLASE AÑO` == h[2]
h13 <- qt$`CLASE AÑO` == h[3]
h16 <- qt$`CLASE AÑO` == h[4]
h19 <- qt$`CLASE AÑO` == h[5]
t <- m$SGR_HARVEST
###
#g07 <- density(na.omit(t[h07]))
g10 <- density(na.omit(t[h10]))
g13 <- density(na.omit(t[h13]))
g16 <- density(na.omit(t[h16]))
g19 <- density(na.omit(t[h19]))
lmin <- min(na.omit(t))
lmax <- max(na.omit(t))
jmax <- max(g10$y,g13$y,g16$y,g19$y)
par(mfrow=c(2,1), cex = 0.5)
plot(g10, xlab = u, xlim = c(lmin, lmax), ylim = c(0,jmax), main = "")
lines(g13, lty=2, col = 2)
lines(g16, lty=3, col = 3)
lines(g19, lty=4, col = 4)
legend("topright", legend = h[-1], col = c(1:4), lty = c(1:4), bty = "n")
df2 <- droplevels(m[-which(m$`CLASE AÑO`=="2007"), ])
boxplot(df2$SGR_HARVEST ~ df2$`CLASE AÑO`,
xlab = w, ylab = NULL, main=u, outline=FALSE, col=c("dodgerblue4","dodgerblue3","dodgerblue2","dodgerblue"),
par(cex.lab=1.2), # is for y-axis
par(cex.axis=1.2), ylim=c(0.5,1.3))
text(x= 1, y=1.3, labels= "Edwards", font=2)
text(x= 2, y=1.3, labels= "Porcelana", font=2)
text(x= 3, y=1.3, labels= "Edwards", font=2)
text(x= 4, y= 1.3, labels= "Loncochalgua", font=2)
m <- qt[c("GF3", "CLASE AÑO")]
u <- "GF3"
w <- "YEAR CLASS"
h <- levels(as.factor(qt$`CLASE AÑO`))
#h07 <- qt$`CLASE AÑO` == h[1]
h10 <- qt$`CLASE AÑO` == h[2]
h13 <- qt$`CLASE AÑO` == h[3]
h16 <- qt$`CLASE AÑO` == h[4]
h19 <- qt$`CLASE AÑO` == h[5]
t <- m$GF3
###
#g07 <- density(na.omit(t[h07]))
g10 <- density(na.omit(t[h10]))
g13 <- density(na.omit(t[h13]))
g16 <- density(na.omit(t[h16]))
g19 <- density(na.omit(t[h19]))
lmin <- min(na.omit(t))
lmax <- max(na.omit(t))
jmax <- max(g10$y,g13$y,g16$y,g19$y)
par(mfrow=c(2,1), cex = 0.5)
plot(g10, xlab = u, xlim = c(lmin, lmax), ylim = c(0,jmax), main = "")
lines(g13, lty=2, col = 2)
lines(g16, lty=3, col = 3)
lines(g19, lty=4, col = 4)
legend("topright", legend = h[-1], col = c(1:4), lty = c(1:4), bty = "n")
df2 <- droplevels(m[-which(m$`CLASE AÑO`=="2007"), ])
boxplot(df2$GF3 ~ df2$`CLASE AÑO`,
xlab = w, ylab = u, outline=FALSE)
vars <- c("COLOR BELLY (IMAGEN)", "COLOR FILETE (IMAGEN)", "COLOR LOMO (IMAGEN)", "numLesGap" , "numLesHem","numLesMel", "amD","amP", "amVA", "amVP",  "areaFil" , "areaGap" ,"areaHem" , "areaMel", "sumLongGap" ,"sumLongHem" ,"sumLongMel")
LYL2E72 <- LYL2E7 %>% filter(!is.na(SEXO))
for(v in vars){
p <-
ggplot(data = LYL2E72, aes(x = .data[[v]], color=SEXO)) +
geom_density() +
labs(x = paste(v), title = paste(v))
q <-
ggplot(data = LYL2E72, aes(x =`CLASE AÑO`, y= .data[[v]], fill=`CLASE AÑO`)) +
geom_boxplot() +
labs(title = paste(v))
grid.arrange(p, q,
ncol = 2, nrow = 1 )
}
vars <- c("COLOR BELLY (IMAGEN)", "COLOR FILETE (IMAGEN)", "COLOR LOMO (IMAGEN)", "numLesGap" , "numLesHem","numLesMel", "amD","amP", "amVA", "amVP",  "areaFil" , "areaGap" ,"areaHem" , "areaMel", "sumLongGap" ,"sumLongHem" ,"sumLongMel")
LYL2E72 <- LYL2E7 %>% filter(!is.na(SEXO))
for(v in vars){
p <-
ggplot(data = LYL2E72, aes(x = .data[[v]], color=SEXO)) +
geom_density() +
labs(x = paste(v), title = paste(v))
q <-
ggplot(data = LYL2E72, aes(x =`CLASE AÑO`, y= .data[[v]], fill=`CLASE AÑO`)) +
geom_boxplot() +
labs(title = paste(v))
grid.arrange(p, q,
ncol = 2, nrow = 1 )
}
vars <- c("Mortalidad SRS")
LYL2E72 <- LYL2E7 %>% filter(!is.na(`Mortalidad SRS`))
for(v in vars){
p <-
ggplot(data = LYL2E72, aes(x = .data[[v]], color=SEXO, na.rm = TRUE)) +
geom_density() +
labs(x = paste(v), title = paste(v))
q <-
ggplot(data = LYL2E72, aes(x =`CLASE AÑO`, y= .data[[v]], fill=`CLASE AÑO`, na.rm = TRUE)) +
geom_boxplot() +
labs(title = paste(v))
grid.arrange(p, q,
ncol = 2, nrow = 1 )
}
vars <- c("SRS CT")
LYL2E72 <- LYL2E7 %>% filter(!is.na(`SRS CT`))
for(v in vars){
p <-
ggplot(data = LYL2E72, aes(x = .data[[v]], color=SEXO, na.rm = TRUE)) +
geom_density() +
labs(x = paste(v), title = paste(v))
q <-
ggplot(data = LYL2E72, aes(x =`CLASE AÑO`, y= .data[[v]], fill=`CLASE AÑO`, na.rm = TRUE)) +
geom_boxplot() +
labs(title = paste(v))
grid.arrange(p, q,
ncol = 2, nrow = 1 )
}
vars <- c("PESO WFE", "PESO SIEMBRA", "GF3", "COLOR FILETE (IMAGEN)","RENDIMIENTO HG","RENDIMIENTO FILETE TRIM D")
LYL2E72 <- LYL2E7 %>% filter(!is.na(SEXO))
for(v in vars){
p <-
ggplot(data = LYL2E72, aes(x = .data[[v]], color=SEXO)) +
geom_density() +
labs(x = paste(v), title = paste(v))
print(p)
}
for(v in vars){
p <-
ggplot(data = LYL2E72, aes(x =`CLASE AÑO`, y= .data[[v]], fill=`CLASE AÑO`)) +
geom_boxplot() +
labs(title = paste(v))
print(p)
}
knitr::opts_chunk$set(echo = FALSE)
library(gtools)
library(ggplot2)
library(dplyr)
library(knitr)
library(kableExtra)
# Crea matriz de datos
datos <- c(20, 5, 80, 95)
dim(datos) <- c(2,2)
# Test de Chi-squared en R (chisq.test)
test<-chisq.test(datos, correct = FALSE)
test$expected
test$statistic
curve(dchisq(x, df = 10), from = 0, to = 40,
main = 'Chi-Square Distribution (df = 10)', #add title
ylab = 'Density', #change y-axis label
lwd = 2, #increase line width to 2
col = 'steelblue') #change line color to steelblue
curve(dchisq(x, df = 10), from = 0, to = 40,
main = 'Chi-Square Distribution (df = 10)', #add title
ylab = 'Density', #change y-axis label
lwd = 2, #increase line width to 2
col = 'steelblue',
xlab="") #change line color to steelblue
curve(dchisq(x, df = 10), from = 0, to = 40,
main = 'Chi-Square Distribution (df = 10)', #add title
ylab = 'Density', #change y-axis label
lwd = 2, #increase line width to 2
col = 'steelblue',
xlab="") #change line color to steelblue
curve(dchisq(x, df = 1), from = 0, to = 40,
main = 'Chi-Square Distribution (df = 10)', #add title
ylab = 'Density', #change y-axis label
lwd = 2, #increase line width to 2
col = 'steelblue',
xlab="") #change line color to steelblue
curve(dchisq(x, df = 1), from = 0, to = 40,
main = 'Chi-Square Distribution (df = 1)', #add title
ylab = 'Density', #change y-axis label
lwd = 2, #increase line width to 2
col = 'steelblue',
xlab="") #change line color to steelblue
par(mfrow = c(1,2))
curve(dchisq(x, df = 1), from = 0, to = 40,
main = 'Chi-Square Distribution (df = 1)', #add title
ylab = 'Density', #change y-axis label
lwd = 2, #increase line width to 2
col = 'steelblue',
xlab="") #change line color to steelblue
curve(dchisq(x, df = 5), from = 0, to = 40,
main = 'Chi-Square Distribution (df = 5)', #add title
ylab = 'Density', #change y-axis label
lwd = 2, #increase line width to 2
col = 'red',
xlab="") #change line color to steelblue
par(mfrow = c(1,2))
curve(dchisq(x, df = 2), from = 0, to = 40,
main = 'Chi-Square Distribution (df = 1)', #add title
ylab = 'Density', #change y-axis label
lwd = 2, #increase line width to 2
col = 'steelblue',
xlab="") #change line color to steelblue
curve(dchisq(x, df = 5), from = 0, to = 40,
main = 'Chi-Square Distribution (df = 5)', #add title
ylab = 'Density', #change y-axis label
lwd = 2, #increase line width to 2
col = 'red',
xlab="") #change line color to steelblue
par(mfrow = c(1,2))
curve(dchisq(x, df = 2), from = 0, to = 40,
main = 'Chi-Square Distribution (df = 2)', #add title
ylab = 'Density', #change y-axis label
lwd = 2, #increase line width to 2
col = 'steelblue',
xlab="") #change line color to steelblue
curve(dchisq(x, df = 4), from = 0, to = 40,
main = 'Chi-Square Distribution (df = 5)', #add title
ylab = 'Density', #change y-axis label
lwd = 2, #increase line width to 2
col = 'red',
xlab="") #change line color to steelblue
par(mfrow = c(1,3))
curve(dchisq(x, df = 2), from = 0, to = 40,
main = 'Chi-Square Distribution (df = 2)', #add title
ylab = 'Density', #change y-axis label
lwd = 2, #increase line width to 2
col = 'steelblue',
xlab="") #change line color to steelblue
curve(dchisq(x, df = 4), from = 0, to = 40,
main = 'Chi-Square Distribution (df = 4)', #add title
ylab = 'Density', #change y-axis label
lwd = 2, #increase line width to 2
col = 'red',
xlab="") #change line color to steelblue
curve(dchisq(x, df = 8), from = 0, to = 40,
main = 'Chi-Square Distribution (df = 8)', #add title
ylab = 'Density', #change y-axis label
lwd = 2, #increase line width to 2
col = 'red',
xlab="") #change line color to steelblue
par(mfrow = c(1,3))
curve(dchisq(x, df = 3), from = 0, to = 40,
main = 'Chi-Square Distribution (df = 2)', #add title
ylab = 'Density', #change y-axis label
lwd = 2, #increase line width to 2
col = 'steelblue',
xlab="") #change line color to steelblue
curve(dchisq(x, df = 6), from = 0, to = 40,
main = 'Chi-Square Distribution (df = 4)', #add title
ylab = 'Density', #change y-axis label
lwd = 2, #increase line width to 2
col = 'red',
xlab="") #change line color to steelblue
curve(dchisq(x, df = 9), from = 0, to = 40,
main = 'Chi-Square Distribution (df = 8)', #add title
ylab = 'Density', #change y-axis label
lwd = 2, #increase line width to 2
col = 'red',
xlab="") #change line color to steelblue
par(mfrow = c(1,3))
curve(dchisq(x, df = 2), from = 0, to = 40,
main = 'Chi-Square Distribution (df = 2)', #add title
ylab = 'Density', #change y-axis label
lwd = 2, #increase line width to 2
col = 'steelblue',
xlab="") #change line color to steelblue
curve(dchisq(x, df = 6), from = 0, to = 40,
main = 'Chi-Square Distribution (df = 4)', #add title
ylab = 'Density', #change y-axis label
lwd = 2, #increase line width to 2
col = 'red',
xlab="") #change line color to steelblue
curve(dchisq(x, df = 12), from = 0, to = 40,
main = 'Chi-Square Distribution (df = 8)', #add title
ylab = 'Density', #change y-axis label
lwd = 2, #increase line width to 2
col = 'red',
xlab="") #change line color to steelblue
par(mfrow = c(1,3))
curve(dchisq(x, df = 2), from = 0, to = 40,
main = 'Chi-Square Distribution (df = 2)', #add title
ylab = 'Density', #change y-axis label
lwd = 2, #increase line width to 2
col = 'steelblue',
xlab="") #change line color to steelblue
curve(dchisq(x, df = 6), from = 0, to = 40,
main = 'Chi-Square Distribution (df = 4)', #add title
ylab = 'Density', #change y-axis label
lwd = 2, #increase line width to 2
col = 'red',
xlab="") #change line color to steelblue
curve(dchisq(x, df = 20), from = 0, to = 40,
main = 'Chi-Square Distribution (df = 8)', #add title
ylab = 'Density', #change y-axis label
lwd = 2, #increase line width to 2
col = 'red',
xlab="") #change line color to steelblue
par(mfrow = c(1,3))
curve(dchisq(x, df = 2), from = 0, to = 40,
main = 'Chi-Square Distribution (df = 2)', #add title
ylab = 'Density', #change y-axis label
lwd = 2, #increase line width to 2
col = 'steelblue',
xlab="") #change line color to steelblue
curve(dchisq(x, df = 6), from = 0, to = 40,
main = 'Chi-Square Distribution (df = 4)', #add title
ylab = 'Density', #change y-axis label
lwd = 2, #increase line width to 2
col = 'red',
xlab="") #change line color to steelblue
curve(dchisq(x, df = 12), from = 0, to = 40,
main = 'Chi-Square Distribution (df = 8)', #add title
ylab = 'Density', #change y-axis label
lwd = 2, #increase line width to 2
col = 'red',
xlab="") #change line color to steelblue
par(mfrow = c(1,3))
curve(dchisq(x, df = 2), from = 0, to = 40,
main = 'Chi-Square Distribution (df = 2)', #add title
ylab = 'Density', #change y-axis label
lwd = 2, #increase line width to 2
col = 'steelblue',
xlab="") #change line color to steelblue
curve(dchisq(x, df = 6), from = 0, to = 40,
main = 'Chi-Square Distribution (df = 6)', #add title
ylab = 'Density', #change y-axis label
lwd = 2, #increase line width to 2
col = 'red',
xlab="") #change line color to steelblue
curve(dchisq(x, df = 12), from = 0, to = 40,
main = 'Chi-Square Distribution (df = 12)', #add title
ylab = 'Density', #change y-axis label
lwd = 2, #increase line width to 2
col = 'red',
xlab="") #change line color to steelblue
curve(dchisq(x, df = 2), from = 0, to = 15,
main = 'Chi-Square Distribution (df = 2)',
ylab = 'Density',
lwd = 2)
#create density curve
curve(dchisq(x, df = 2), from = 0, to = 15,
main = 'Chi-Square Distribution (df = 2)',
ylab = 'Density',
lwd = 2,
xlab="Valor chi cuadrado.")
par(mfrow = c(1,3))
curve(dchisq(x, df = 2), from = 0, to = 40,
main = "grados de libertad = 2", #add title
ylab = 'Density', #change y-axis label
lwd = 2, #increase line width to 2
col = 'steelblue',
xlab="") #change line color to steelblue
curve(dchisq(x, df = 6), from = 0, to = 40,
main = "grados de libertad = 6", #add title
ylab = 'Density', #change y-axis label
lwd = 2, #increase line width to 2
col = 'red',
xlab="Valor chi cuadrado.") #change line color to steelblue
curve(dchisq(x, df = 12), from = 0, to = 40,
main = "grados de libertad = 12", #add title
ylab = 'Density', #change y-axis label
lwd = 2, #increase line width to 2
col = 'red',
xlab="") #change line color to steelblue
# Crea matriz de datos
datos <- c(20, 5, 80, 95)
dim(datos) <- c(2,2)
# Test de Chi-squared en R (chisq.test)
chisq.test(datos, correct = FALSE)
#create density curve
curve(dchisq(x, df = 2), from = 0, to = 15,
main = 'Chi-Square Distribution (df = 2)',
ylab = 'Density',
lwd = 2,
xlab="Valor chi cuadrado.")
#find upper and lower values for middle 95% of distribution
upper95 <- qchisq(.95, 2)
#create vector of x values
x_upper95 <- seq(upper95, 40)
#create vector of chi-square density values
p_upper95 <- dchisq(x_upper95, df = 2)
#fill in portion of the density plot for upper 95% value to end of plot
polygon(c(x_upper95, rev(x_upper95)), c(p_upper95, rep(0, length(p_upper95))),
col = adjustcolor('red', alpha=0.3), border = NA)
