knitr::opts_chunk$set(echo = FALSE)
library(gtools)
library(ggplot2)
library(dplyr)
# Crea objetos X e Y
X <- c(942,101,313,800)
Y <- c(13,14,18,10)
# Realiza test de correlación
cor.test(X,Y, method = "spearman",
alternative = "two.sided")
statdat <- c(-1.0, -0.8, -0.8, -0.8, -0.6, -0.4, -0.4, -0.4, -0.4, -0.2, -0.2, 0.0, 0.0,  0.2, 0.2, 0.4, 0.4, 0.4, 0.4, 0.6, 0.8, 0.8, 0.8, 1.0)
kable(statdat, col.names = NULL)
knitr::opts_chunk$set(echo = FALSE)
library(gtools)
library(ggplot2)
library(dplyr)
library(knitr)
statdat <- c(-1.0, -0.8, -0.8, -0.8, -0.6, -0.4, -0.4, -0.4, -0.4, -0.2, -0.2, 0.0, 0.0,  0.2, 0.2, 0.4, 0.4, 0.4, 0.4, 0.6, 0.8, 0.8, 0.8, 1.0)
kable(statdat, col.names = NULL)
Statistics <- c("AUM",
"Minimum Managed Account Size",
"Liquidity",
"Average Margin / Equity",
"Roundturns / $ Million / Year",
"Incentive Fees",
"Instruments Traded")
Value <- c("$30K","$30K","Daily","50%","6,933","25%","ES")
AI <- data.frame(Statistics,Value);
Statistics <- c("AUM",
"Minimum Managed Account Size",
"Liquidity",
"Average Margin / Equity",
"Roundturns / $ Million / Year",
"Incentive Fees",
"Instruments Traded")
Value <- c("$30K","$30K","Daily","50%","6,933","25%","ES")
AI <- data.frame(Statistics,Value);
x = kable(AI, format="pandoc") %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"))
knitr::opts_chunk$set(echo = FALSE)
library(gtools)
library(ggplot2)
library(dplyr)
library(knitr)
library(kableExtra)
Statistics <- c("AUM",
"Minimum Managed Account Size",
"Liquidity",
"Average Margin / Equity",
"Roundturns / $ Million / Year",
"Incentive Fees",
"Instruments Traded")
Value <- c("$30K","$30K","Daily","50%","6,933","25%","ES")
AI <- data.frame(Statistics,Value);
x = kable(AI, format="pandoc") %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"))
cat(x[3:9], sep="\n")
x<- c(-1.0, -0.8, -0.8, -0.8, -0.6, -0.4, -0.4, -0.4, -0.4, -0.2, -0.2, 0.0, 0.0,  0.2, 0.2, 0.4, 0.4, 0.4, 0.4, 0.6, 0.8, 0.8, 0.8, 1.0)
dat<-tibble(x)
dat %>%
kable() %>%
kable_styling()
x<- c(-1.0, -0.8, -0.8, -0.8, -0.6, -0.4, -0.4, -0.4, -0.4, -0.2, -0.2, 0.0, 0.0,  0.2, 0.2, 0.4, 0.4, 0.4, 0.4, 0.6, 0.8, 0.8, 0.8, 1.0)
matrix(x, row = 1, ncol = 1)
matrix(data=x, row = 1, ncol = 1)
matrix(c(-1.0, -0.8, -0.8, -0.8, -0.6, -0.4, -0.4, -0.4, -0.4, -0.2, -0.2, 0.0, 0.0,  0.2, 0.2, 0.4, 0.4, 0.4, 0.4, 0.6, 0.8, 0.8, 0.8, 1.0), row = 13, ncol = 8)
matrix(c(-1.0, -0.8, -0.8, -0.8, -0.6, -0.4, -0.4, -0.4, -0.4, -0.2, -0.2, 0.0, 0.0,  0.2, 0.2, 0.4, 0.4, 0.4, 0.4, 0.6, 0.8, 0.8, 0.8, 1.0), row = 3, ncol = 8)
matrix(c(-1.0, -0.8, -0.8, -0.8, -0.6, -0.4, -0.4, -0.4, -0.4, -0.2, -0.2, 0.0, 0.0,  0.2, 0.2, 0.4, 0.4, 0.4, 0.4, 0.6, 0.8, 0.8, 0.8, 1.0), row = 3, ncol = 8, ,byrow = TRUE)
matrix(c(-1.0, -0.8, -0.8, -0.8, -0.6, -0.4, -0.4, -0.4, -0.4, -0.2, -0.2, 0.0, 0.0,  0.2, 0.2, 0.4, 0.4, 0.4, 0.4, 0.6, 0.8, 0.8, 0.8, 1.0), nrow = 3, ncol = 8, ,byrow = TRUE)
x <- matrix(c(-1.0, -0.8, -0.8, -0.8, -0.6, -0.4, -0.4, -0.4, -0.4, -0.2, -0.2, 0.0, 0.0,  0.2, 0.2, 0.4, 0.4, 0.4, 0.4, 0.6, 0.8, 0.8, 0.8, 1.0), nrow = 3, ncol = 8, ,byrow = TRUE)
dat<-tibble(x)
dat %>%
kable() %>%
kable_styling()
x <- matrix(c(-1.0, -0.8, -0.8, -0.8, -0.6, -0.4, -0.4, -0.4, -0.4, -0.2, -0.2, 0.0, 0.0,  0.2, 0.2, 0.4, 0.4, 0.4, 0.4, 0.6, 0.8, 0.8, 0.8, 1.0), nrow = 3, ncol = 8, ,byrow = TRUE)
x %>%
kable() %>%
kable_styling()
x <- matrix(c(-1.0, -0.8, -0.8, -0.8, -0.6, -0.4, -0.4, -0.4, -0.4, -0.2, -0.2, 0.0, 0.0,  0.2, 0.2, 0.4, 0.4, 0.4, 0.4, 0.6, 0.8, 0.8, 0.8, 1.0), nrow = 3, ncol = 8, ,byrow = TRUE)
x %>%
kable() %>%
kable_styling()
x <- matrix(c(-1.0, -0.8, -0.8, -0.8, -0.6, -0.4, -0.4, -0.4, -0.4, -0.2, -0.2, 0.0, 0.0,  0.2, 0.2, 0.4, 0.4, 0.4, 0.4, 0.6, 0.8, 0.8, 0.8, 1.0), nrow = 3, ncol = 8, byrow = TRUE)
x %>%
kable() %>%
kable_styling()
rm(list=ls())
#library(rattle)
library(MASS)
library(readxl)
library(magrittr)
library(corrplot)
library(mice)
library(naniar)
library(tidyverse)
library(gridExtra)
# Código para cargar datos desde terminal de José
# readxl algunas veces lee columnas con datos vacios como logicas en vez de numerica.
# https://readxl.tidyverse.org/articles/cell-and-column-types.html
nms <- names(read_excel("~/Dropbox/DATA/PMG/BD/GEN/LYL2YC07_10_13_16_19/DAT_YC/LYL2E7YC19_informantes.xlsx"))
nms
ct <- ifelse(grepl("^%", nms), "numeric", "guess")
ct <- c( "text","text","text","text","date","text","text","text","text","text","text","date","numeric","numeric","numeric","numeric","numeric","numeric","numeric","text","date","numeric","numeric","numeric","numeric","numeric","numeric","numeric","numeric","numeric","numeric","numeric","numeric","numeric","numeric","numeric","numeric","numeric","numeric","numeric","numeric","numeric","numeric","numeric","numeric","numeric","numeric","numeric","numeric","numeric","numeric","numeric","numeric","numeric","numeric","numeric","numeric","numeric","numeric","numeric","numeric","numeric","numeric","numeric","numeric","numeric","text","numeric","numeric","numeric","text","text","text","text","text","text","text","text","text","numeric","numeric","numeric","numeric","numeric","numeric","numeric","numeric","numeric","numeric","numeric","numeric","numeric","numeric","numeric","numeric")
LYL2E7YC07Informantes <-
read_xls("~/Dropbox/DATA/PMG/BD/GEN/LYL2YC07_10_13_16_19/DAT_YC/LYL2E7YC07_Informantes.xls",
sheet = 1,
col_names = T,
col_types = ct,
na = "NA")
LYL2E7YC10Informantes <-
read_xls("~/Dropbox/DATA/PMG/BD/GEN/LYL2YC07_10_13_16_19/DAT_YC/LYL2E7YC10_Informantes.xls",
sheet = 1,
col_names = T,
col_types = ct,
na = "NA")
LYL2E7YC13Informantes <-
read_xls("~/Dropbox/DATA/PMG/BD/GEN/LYL2YC07_10_13_16_19/DAT_YC/LYL2E7YC13_Informantes.xls",
sheet = 1,
col_names = T,
col_types = ct,
na = "NA")
LYL2E7YC16Informantes <-
read_xlsx("~/Dropbox/DATA/PMG/BD/GEN/LYL2YC07_10_13_16_19/DAT_YC/LYL2E7YC16_Informantes.xlsx",
sheet = 1,
col_names = T,
col_types = ct,
na = "NA")
LYL2E7YC19Informantes <-
read_xlsx("~/Dropbox/DATA/PMG/BD/GEN/LYL2YC07_10_13_16_19/DAT_YC/LYL2E7YC19_Informantes.xlsx",
sheet = 1,
col_names = T,
col_types = ct,
na = "NA")
# Explora dimensiones
dim(LYL2E7YC07Informantes);
dim(LYL2E7YC10Informantes);
dim(LYL2E7YC13Informantes);
dim(LYL2E7YC16Informantes);
dim(LYL2E7YC19Informantes);
# Ediciones en la dimensiones
n07 <- dim(LYL2E7YC07Informantes)[1]
n10 <- dim(LYL2E7YC10Informantes)[1]
n13 <- dim(LYL2E7YC13Informantes)[1]
n16 <- dim(LYL2E7YC16Informantes)[1]
n19 <- dim(LYL2E7YC19Informantes)[1]
# Ordenamos según nombre de columnas
LYL2E7YC07Informantes <-
LYL2E7YC07Informantes[,sort(names(LYL2E7YC07Informantes))]
LYL2E7YC10Informantes <-
LYL2E7YC10Informantes[,sort(names(LYL2E7YC10Informantes))]
LYL2E7YC13Informantes <-
LYL2E7YC13Informantes[,sort(names(LYL2E7YC13Informantes))]
LYL2E7YC16Informantes <-
LYL2E7YC16Informantes[,sort(names(LYL2E7YC16Informantes))]
LYL2E7YC19Informantes <-
LYL2E7YC19Informantes[,sort(names(LYL2E7YC19Informantes))]
# Resultado de las ediciones
# mismo número de columnas ordenadas para exploratorio
# names(LYL2E7YC17Informantes) <- names(LYL2E7YC14Informantes)
print(
cbind(
names(LYL2E7YC07Informantes),
names(LYL2E7YC10Informantes),
names(LYL2E7YC13Informantes),
names(LYL2E7YC16Informantes),
names(LYL2E7YC19Informantes)))
print(
cbind(
str(LYL2E7YC07Informantes),
str(LYL2E7YC10Informantes),
str(LYL2E7YC13Informantes),
str(LYL2E7YC16Informantes),
str(LYL2E7YC19Informantes)))
LYL2E7 <- rbind(LYL2E7YC07Informantes,
LYL2E7YC10Informantes,
LYL2E7YC13Informantes,
LYL2E7YC16Informantes,
LYL2E7YC19Informantes)
LYL2E7$DGR_HARVEST <- (LYL2E7$`PESO WFE` - LYL2E7$`PESO SIEMBRA`) / as.numeric((difftime(LYL2E7$`FECHA COSECHA`, LYL2E7$`FECHA SIEMBRA`,units = "days")))
LYL2E7$SGR_HARVEST <- 100*(log(LYL2E7$`PESO WFE`) - log(LYL2E7$`PESO SIEMBRA`)) / as.numeric((difftime(LYL2E7$`FECHA COSECHA`, LYL2E7$`FECHA SIEMBRA`,units = "days")))
LYL2E7$TIME_HARVEST <- 30*as.numeric((difftime(LYL2E7$`FECHA COSECHA`, LYL2E7$`FECHA SIEMBRA`,units = "days")))
LYL2E7$TIME_TO_HARVEST_IN5600GR <- (5600/LYL2E7$DGR_HARVEST)/(30)
LYL2E7$PIT_YEAR <- paste0(LYL2E7$`CLASE AÑO`,LYL2E7$PIT)
# system.time(write.table(LYL2E7,"C:/Users/yo/Dropbox/LYL3/BDLYL3/LYL2E7 Informantes productivos.txt",sep = " ", dec = "."))
dim(LYL2E7)
LYL2E7$CENTRO <-as.factor(LYL2E7$CENTRO)
LYL2E7$`JAULA ORIGEN` <-as.factor(LYL2E7$`JAULA ORIGEN`)
LYL2E7$`SRS Externo` <-as.factor(LYL2E7$`SRS Externo`)
LYL2E7$`SRS interno` <-as.factor(LYL2E7$`SRS interno`)
LYL2E7$`SRS CT` <-as.numeric(LYL2E7$`SRS CT`)
LYL2E7$`Mortalidad SRS` <-as.factor(LYL2E7$`Mortalidad SRS`)
LYL2E7$SEXO <-as.factor(LYL2E7$SEXO)
summary(LYL2E7)
table(LYL2E7$CENTRO, LYL2E7$`CLASE AÑO`)
qt <- LYL2E7[,which(unlist(lapply(LYL2E7, is.numeric)))]
qt$"CLASE AÑO" <- as.numeric(LYL2E7$`CLASE AÑO`)
qt <- qt[,sort(names(qt))]
qt1 <- qt %>% select("% CABEZA":"CATARATAS" )
par(cex=0.5)
vis_miss(qt1, sort_miss = T, warn_large_data=F) # exploración de datos perdidos, variable a variable, de variables cuantitativas
qt2 <- qt %>% select("COLOR (20-34) SALMOFAN":"GAPING PMG" )
par(cex=0.5)
vis_miss(qt2, sort_miss = T, warn_large_data=F) # exploración de datos perdidos, variable a variable, de variables cuantitativas
qt3 <- qt %>% select("GF3":"numLesMel" )
par(cex=0.5)
vis_miss(qt3, sort_miss = T, warn_large_data=F) # exploración de datos perdidos, variable a variable, de variables cuantitativas
qt4 <- qt %>% select("PESO CABEZA":"UTA" )
par(cex=0.5)
vis_miss(qt4, sort_miss = T, warn_large_data=F) # exploración de datos perdidos, variable a variable, de variables cuantitativas
m <- qt[c("SGR_HARVEST", "CLASE AÑO")]
u <- "SGR - BREEDING NUCLEOUS"
w <- "YEAR CLASS - SPAWNING"
w <- "HARVEST YEAR"
# Cambio clase año por harvest date
qt$`CLASE AÑO` <- as.factor(qt$`CLASE AÑO`)
levels(qt$`CLASE AÑO`) <- c("2007","2010","2013","2016","2019")
h <- levels(as.factor(qt$`CLASE AÑO`))
#h07 <- qt$`CLASE AÑO` == h[1]
h10 <- qt$`CLASE AÑO` == h[2]
h13 <- qt$`CLASE AÑO` == h[3]
h16 <- qt$`CLASE AÑO` == h[4]
h19 <- qt$`CLASE AÑO` == h[5]
t <- m$SGR_HARVEST
###
#g07 <- density(na.omit(t[h07]))
g10 <- density(na.omit(t[h10]))
g13 <- density(na.omit(t[h13]))
g16 <- density(na.omit(t[h16]))
g19 <- density(na.omit(t[h19]))
lmin <- min(na.omit(t))
lmax <- max(na.omit(t))
jmax <- max(g10$y,g13$y,g16$y,g19$y)
par(mfrow=c(2,1), cex = 0.5)
plot(g10, xlab = u, xlim = c(lmin, lmax), ylim = c(0,jmax), main = "")
lines(g13, lty=2, col = 2)
lines(g16, lty=3, col = 3)
lines(g19, lty=4, col = 4)
legend("topright", legend = h[-1], col = c(1:4), lty = c(1:4), bty = "n")
df2 <- droplevels(m[-which(m$`CLASE AÑO`=="2007"), ])
boxplot(df2$SGR_HARVEST ~ df2$`CLASE AÑO`,
xlab = w, ylab = NULL, main=u, outline=FALSE, col=c("dodgerblue4","dodgerblue3","dodgerblue2","dodgerblue"),
par(cex.lab=1.2), # is for y-axis
par(cex.axis=1.2), ylim=c(0.5,1.3))
text(x= 1, y= 1.3, labels= "Loncochalgua", font=2)
text(x= 2, y=1.3, labels= "Edwards", font=2)
text(x= 3, y=1.3, labels= "Porcelana", font=2)
text(x= 4, y=1.3, labels= "Edwards", font=2)
text(x= 5, y= 1.3, labels= "Loncochalgua", font=2)
boxplot(df2$SGR_HARVEST ~ df2$`CLASE AÑO`,
xlab = w, ylab = NULL, main=u, outline=FALSE, col=c("dodgerblue4","dodgerblue3","dodgerblue2","dodgerblue"),
par(cex.lab=1.2), # is for y-axis
par(cex.axis=1.2), ylim=c(0.5,1.3))
text(x= 1, y= 1.3, labels= "Loncochalgua", font=2)
text(x= 2, y=1.3, labels= "Edwards", font=2)
text(x= 3, y=1.3, labels= "Porcelana", font=2)
text(x= 4, y=1.3, labels= "Edwards", font=2)
text(x= 5, y= 1.3, labels= "Loncochalgua", font=2)
plot(g10, xlab = u, xlim = c(lmin, lmax), ylim = c(0,jmax), main = "")
lines(g13, lty=2, col = 2)
lines(g16, lty=3, col = 3)
lines(g19, lty=4, col = 4)
legend("topright", legend = h[-1], col = c(1:4), lty = c(1:4), bty = "n")
boxplot(df2$SGR_HARVEST ~ df2$`CLASE AÑO`,
xlab = w, ylab = NULL, main=u, outline=FALSE, col=c("dodgerblue4","dodgerblue3","dodgerblue2","dodgerblue"),
par(cex.lab=1.2), # is for y-axis
par(cex.axis=1.2), ylim=c(0.5,1.3))
m <- qt[c("SGR_HARVEST", "CLASE AÑO")]
u <- "SGR - INFORMANTES"
w <- "YEAR CLASS - SPAWNING"
w <- "HARVEST YEAR"
# Cambio clase año por harvest date
qt$`CLASE AÑO` <- as.factor(qt$`CLASE AÑO`)
levels(qt$`CLASE AÑO`) <- c("2007","2010","2013","2016","2019")
h <- levels(as.factor(qt$`CLASE AÑO`))
#h07 <- qt$`CLASE AÑO` == h[1]
h10 <- qt$`CLASE AÑO` == h[2]
h13 <- qt$`CLASE AÑO` == h[3]
h16 <- qt$`CLASE AÑO` == h[4]
h19 <- qt$`CLASE AÑO` == h[5]
t <- m$SGR_HARVEST
###
#g07 <- density(na.omit(t[h07]))
g10 <- density(na.omit(t[h10]))
g13 <- density(na.omit(t[h13]))
g16 <- density(na.omit(t[h16]))
g19 <- density(na.omit(t[h19]))
lmin <- min(na.omit(t))
lmax <- max(na.omit(t))
jmax <- max(g10$y,g13$y,g16$y,g19$y)
par(mfrow=c(2,1), cex = 0.5)
plot(g10, xlab = u, xlim = c(lmin, lmax), ylim = c(0,jmax), main = "")
lines(g13, lty=2, col = 2)
lines(g16, lty=3, col = 3)
lines(g19, lty=4, col = 4)
legend("topright", legend = h[-1], col = c(1:4), lty = c(1:4), bty = "n")
df2 <- droplevels(m[-which(m$`CLASE AÑO`=="2007"), ])
boxplot(df2$SGR_HARVEST ~ df2$`CLASE AÑO`,
xlab = w, ylab = NULL, main=u, outline=FALSE, col=c("dodgerblue4","dodgerblue3","dodgerblue2","dodgerblue"),
par(cex.lab=1.2), # is for y-axis
par(cex.axis=1.2), ylim=c(0.5,1.3))
text(x= 1, y= 1.3, labels= "Loncochalgua", font=2)
text(x= 2, y=1.3, labels= "Edwards", font=2)
text(x= 3, y=1.3, labels= "Porcelana", font=2)
text(x= 4, y=1.3, labels= "Edwards", font=2)
text(x= 5, y= 1.3, labels= "Loncochalgua", font=2)
m <- qt[c("SGR_HARVEST", "CLASE AÑO")]
u <- "SGR - INFORMANTES"
w <- "YEAR CLASS - SPAWNING"
w <- "HARVEST YEAR"
# Cambio clase año por harvest date
qt$`CLASE AÑO` <- as.factor(qt$`CLASE AÑO`)
levels(qt$`CLASE AÑO`) <- c("2007","2010","2013","2016","2019")
h <- levels(as.factor(qt$`CLASE AÑO`))
#h07 <- qt$`CLASE AÑO` == h[1]
h10 <- qt$`CLASE AÑO` == h[2]
h13 <- qt$`CLASE AÑO` == h[3]
h16 <- qt$`CLASE AÑO` == h[4]
h19 <- qt$`CLASE AÑO` == h[5]
t <- m$SGR_HARVEST
###
#g07 <- density(na.omit(t[h07]))
g10 <- density(na.omit(t[h10]))
g13 <- density(na.omit(t[h13]))
g16 <- density(na.omit(t[h16]))
g19 <- density(na.omit(t[h19]))
lmin <- min(na.omit(t))
lmax <- max(na.omit(t))
jmax <- max(g10$y,g13$y,g16$y,g19$y)
par(mfrow=c(2,1), cex = 0.5)
plot(g10, xlab = u, xlim = c(lmin, lmax), ylim = c(0,jmax), main = "")
lines(g13, lty=2, col = 2)
lines(g16, lty=3, col = 3)
lines(g19, lty=4, col = 4)
legend("topright", legend = h[-1], col = c(1:4), lty = c(1:4), bty = "n")
df2 <- droplevels(m[-which(m$`CLASE AÑO`=="2007"), ])
boxplot(df2$SGR_HARVEST ~ df2$`CLASE AÑO`,
xlab = w, ylab = NULL, main=u, outline=FALSE, col=c("dodgerblue4","dodgerblue3","dodgerblue2","dodgerblue"),
par(cex.lab=1.2), # is for y-axis
par(cex.axis=1.2), ylim=c(0.5,1.3))
text(x= 2, y=1.3, labels= "Edwards", font=2)
text(x= 3, y=1.3, labels= "Porcelana", font=2)
text(x= 4, y=1.3, labels= "Edwards", font=2)
text(x= 5, y= 1.3, labels= "Loncochalgua", font=2)
m <- qt[c("SGR_HARVEST", "CLASE AÑO")]
u <- "SGR - INFORMANTES"
w <- "YEAR CLASS - SPAWNING"
w <- "HARVEST YEAR"
# Cambio clase año por harvest date
qt$`CLASE AÑO` <- as.factor(qt$`CLASE AÑO`)
levels(qt$`CLASE AÑO`) <- c("2007","2010","2013","2016","2019")
h <- levels(as.factor(qt$`CLASE AÑO`))
#h07 <- qt$`CLASE AÑO` == h[1]
h10 <- qt$`CLASE AÑO` == h[2]
h13 <- qt$`CLASE AÑO` == h[3]
h16 <- qt$`CLASE AÑO` == h[4]
h19 <- qt$`CLASE AÑO` == h[5]
t <- m$SGR_HARVEST
###
#g07 <- density(na.omit(t[h07]))
g10 <- density(na.omit(t[h10]))
g13 <- density(na.omit(t[h13]))
g16 <- density(na.omit(t[h16]))
g19 <- density(na.omit(t[h19]))
lmin <- min(na.omit(t))
lmax <- max(na.omit(t))
jmax <- max(g10$y,g13$y,g16$y,g19$y)
par(mfrow=c(2,1), cex = 0.5)
plot(g10, xlab = u, xlim = c(lmin, lmax), ylim = c(0,jmax), main = "")
lines(g13, lty=2, col = 2)
lines(g16, lty=3, col = 3)
lines(g19, lty=4, col = 4)
legend("topright", legend = h[-1], col = c(1:4), lty = c(1:4), bty = "n")
df2 <- droplevels(m[-which(m$`CLASE AÑO`=="2007"), ])
boxplot(df2$SGR_HARVEST ~ df2$`CLASE AÑO`,
xlab = w, ylab = NULL, main=u, outline=FALSE, col=c("dodgerblue4","dodgerblue3","dodgerblue2","dodgerblue"),
par(cex.lab=1.2), # is for y-axis
par(cex.axis=1.2), ylim=c(0.5,1.3))
text(x= 1, y=1.3, labels= "Edwards", font=2)
text(x= 2, y=1.3, labels= "Porcelana", font=2)
text(x= 3, y=1.3, labels= "Edwards", font=2)
text(x= 4, y= 1.3, labels= "Loncochalgua", font=2)
m <- qt[c("GF3", "CLASE AÑO")]
u <- "GF3"
w <- "YEAR CLASS"
h <- levels(as.factor(qt$`CLASE AÑO`))
#h07 <- qt$`CLASE AÑO` == h[1]
h10 <- qt$`CLASE AÑO` == h[2]
h13 <- qt$`CLASE AÑO` == h[3]
h16 <- qt$`CLASE AÑO` == h[4]
h19 <- qt$`CLASE AÑO` == h[5]
t <- m$GF3
###
#g07 <- density(na.omit(t[h07]))
g10 <- density(na.omit(t[h10]))
g13 <- density(na.omit(t[h13]))
g16 <- density(na.omit(t[h16]))
g19 <- density(na.omit(t[h19]))
lmin <- min(na.omit(t))
lmax <- max(na.omit(t))
jmax <- max(g10$y,g13$y,g16$y,g19$y)
par(mfrow=c(2,1), cex = 0.5)
plot(g10, xlab = u, xlim = c(lmin, lmax), ylim = c(0,jmax), main = "")
lines(g13, lty=2, col = 2)
lines(g16, lty=3, col = 3)
lines(g19, lty=4, col = 4)
legend("topright", legend = h[-1], col = c(1:4), lty = c(1:4), bty = "n")
df2 <- droplevels(m[-which(m$`CLASE AÑO`=="2007"), ])
boxplot(df2$GF3 ~ df2$`CLASE AÑO`,
xlab = w, ylab = u, outline=FALSE)
vars <- c("COLOR BELLY (IMAGEN)", "COLOR FILETE (IMAGEN)", "COLOR LOMO (IMAGEN)", "numLesGap" , "numLesHem","numLesMel", "amD","amP", "amVA", "amVP",  "areaFil" , "areaGap" ,"areaHem" , "areaMel", "sumLongGap" ,"sumLongHem" ,"sumLongMel")
LYL2E72 <- LYL2E7 %>% filter(!is.na(SEXO))
for(v in vars){
p <-
ggplot(data = LYL2E72, aes(x = .data[[v]], color=SEXO)) +
geom_density() +
labs(x = paste(v), title = paste(v))
q <-
ggplot(data = LYL2E72, aes(x =`CLASE AÑO`, y= .data[[v]], fill=`CLASE AÑO`)) +
geom_boxplot() +
labs(title = paste(v))
grid.arrange(p, q,
ncol = 2, nrow = 1 )
}
vars <- c("COLOR BELLY (IMAGEN)", "COLOR FILETE (IMAGEN)", "COLOR LOMO (IMAGEN)", "numLesGap" , "numLesHem","numLesMel", "amD","amP", "amVA", "amVP",  "areaFil" , "areaGap" ,"areaHem" , "areaMel", "sumLongGap" ,"sumLongHem" ,"sumLongMel")
LYL2E72 <- LYL2E7 %>% filter(!is.na(SEXO))
for(v in vars){
p <-
ggplot(data = LYL2E72, aes(x = .data[[v]], color=SEXO)) +
geom_density() +
labs(x = paste(v), title = paste(v))
q <-
ggplot(data = LYL2E72, aes(x =`CLASE AÑO`, y= .data[[v]], fill=`CLASE AÑO`)) +
geom_boxplot() +
labs(title = paste(v))
grid.arrange(p, q,
ncol = 2, nrow = 1 )
}
vars <- c("Mortalidad SRS")
LYL2E72 <- LYL2E7 %>% filter(!is.na(`Mortalidad SRS`))
for(v in vars){
p <-
ggplot(data = LYL2E72, aes(x = .data[[v]], color=SEXO, na.rm = TRUE)) +
geom_density() +
labs(x = paste(v), title = paste(v))
q <-
ggplot(data = LYL2E72, aes(x =`CLASE AÑO`, y= .data[[v]], fill=`CLASE AÑO`, na.rm = TRUE)) +
geom_boxplot() +
labs(title = paste(v))
grid.arrange(p, q,
ncol = 2, nrow = 1 )
}
vars <- c("SRS CT")
LYL2E72 <- LYL2E7 %>% filter(!is.na(`SRS CT`))
for(v in vars){
p <-
ggplot(data = LYL2E72, aes(x = .data[[v]], color=SEXO, na.rm = TRUE)) +
geom_density() +
labs(x = paste(v), title = paste(v))
q <-
ggplot(data = LYL2E72, aes(x =`CLASE AÑO`, y= .data[[v]], fill=`CLASE AÑO`, na.rm = TRUE)) +
geom_boxplot() +
labs(title = paste(v))
grid.arrange(p, q,
ncol = 2, nrow = 1 )
}
vars <- c("PESO WFE", "PESO SIEMBRA", "GF3", "COLOR FILETE (IMAGEN)","RENDIMIENTO HG","RENDIMIENTO FILETE TRIM D")
LYL2E72 <- LYL2E7 %>% filter(!is.na(SEXO))
for(v in vars){
p <-
ggplot(data = LYL2E72, aes(x = .data[[v]], color=SEXO)) +
geom_density() +
labs(x = paste(v), title = paste(v))
print(p)
}
for(v in vars){
p <-
ggplot(data = LYL2E72, aes(x =`CLASE AÑO`, y= .data[[v]], fill=`CLASE AÑO`)) +
geom_boxplot() +
labs(title = paste(v))
print(p)
}
