Estacion <- c("Otoño", "Invierno", "Primavera","Verano")
Densidad <- c(1000, 100, 800, 3000)
# Características de un objeto
class(Estacion)
colnames(Densidad)
Densidad <- c(1000, NA, 800, 3000)
# Características de un objeto
class(Estacion)
# Características de un objeto
class(Estacion)
dim(Estacion)
# Remover objetos de la sesión de trabajo
rm(list = ls())
Sitio <- as.factor("S1","S2","S3")
Sitio <- as.factor(c("S1","S2","S3"))
Estacion <- c("Otoño", "Invierno", "Primavera","Verano")
Sitio <- as.factor(c("S1","S2","S3"))
Densidad <- c(1000, NA, 800, 3000)
Sitio <- as.factor(c("S1","S2","S3","S4"))
Densidad <- c(1000, NA, 800, 3000)
# Características de un objeto
class(Estacion)
dim(Estacion)
# Características de un objeto
class(Estacion)
dim(Estacion)
length(Estacion)
name(Estacion)
names(Estacion)
Nematodos <- c(TRUE, NA, FALSE, TRUE)
# Características de un objeto
class(Estacion)
dim(Estacion)
length(Estacion)
names(Estacion)
is.na(Estacion)
View(meiofauna)
# Elabirando un data.frame
meiofauna <- data.frame(Estacion, Sitio, Densidad)
View(meiofauna)
dim(meiofauna)
class(meiofauna)
names(meiofauna)
summary(meiofauna)
str(meiofauna)
# Extrae información
meiofauna[c(1,4),]
# Extrae información
meiofauna[c(1,4),]
meiofauna[c(1,4),"Sitio"]
meiofauna[c(1,4),"nDensidad"]
meiofauna[c(1:2),"Densidad"]
meiofauna$$Estacion
meiofauna$Estacion
meiofauna$Estacion[3]
meiofauna$Sitio[-3]
# Trabajando con matrices
abundancia=c(1:12)
# Trabajando con matrices
abundancia=c(1:12)
dim(abundancia)
matriz_abundancia  = matrix(abundancia, ncol=3)
matriz_abundancia
class (matriz_abundancia)
dim(matriz_abundancia) # dimenciones de una matriz
abundancia[6,]
# Trabajando con matrices
abundancia=c(1:24)
dim(abundancia)
matriz_abundancia  = matrix(abundancia, ncol=3)
matriz_abundancia
matriz_abundancia  = matrix(abundancia, ncol=4)
matriz_abundancia
class (matriz_abundancia)
dim(matriz_abundancia) # dimensiones de una matriz
abundancia[3,]
abundancia[,c(1,2)]
M=abundancia[1,]
M_abundancia  = matrix(abundancia, ncol=4)
M_abundancia
class(M_abundancia)
dim(M_abundancia) # dimensiones de una matriz
M_abundancia[3,]
M_abundancia[,c(1,2)]
mean(M)
M  = matrix(abundancia, ncol=4)
M
class(M)
dim(M) # dimensiones de una matriz
M[3,]
M[,c(1,2)]
mean(M)
summary(M)
M>=4
M!=12
# Trabajando con listas
proyecto <- list(meiofauna, M)
View(proyecto)
proyecto
View(meiofauna)
# agregar nombres a una lista
proyecto <- list(Datos=meiofauna, Abundancia=M)
proyecto
str(proyecto)
# Acceso a componentes de una lista
proyecto$Datos
proyecto$Abundancia
proyecto[[2]]
monitoreo[[1]] = salinidad
monitoreo[[1]] = c("Analisis de datos")
proyecto[[1]] = c("Analisis de datos")
View(proyecto)
# R funciona con comando matemáticos
29+29
29*29
29==29
# Error en R
29 + diez
# Version R
version
R.version.string
# ¿Como citar R?
citation()
# En que directorio estoy
getwd()
# Listar librerías o packages disponibles en mi entorno de trabajo
search()
# Listar archivos en el directorio actual
list.files()
Estacion <- c("Otoño", "Invierno", "Primavera","Verano")
Sitio <- as.factor(c("S1","S2","S3","S4"))
Densidad <- c(1000, NA, 0, 3000)
# Listar objetos
ls()
# Características o atributos de un objeto
class(Estacion)
length(Estacion)
Names(estacion)
names(estacion)
is.na(Estacion)
names(Estacion)
is.na(Estacion)
# Elaborando un data.frame
meiofauna <- data.frame(Estacion, Sitio, Densidad)
# Atributos y exploración un data.frame
View(meiofauna)
dim(meiofauna)
class(meiofauna)
names(meiofauna)
summary(meiofauna)
str(meiofauna)
# Extrae información
meiofauna[c(1,4),]
meiofauna[c(1,4),"Sitio"]
meiofauna[c(1:2),"Densidad"]
meiofauna$Sitio
meiofauna$Sitio[-3] # excluye datos
# Remover objetos de la sesión de trabajo
rm(list = ls())
# Trabajando con matrices
abundancia=c(1:24)
dim(abundancia)
M  = matrix(abundancia, ncol=4)
M
class(M)
dim(M) # dimensiones de una matriz
M[3,]
M[,c(1,2)]
mean(M)
summary(M)
M>=4 # greater than or equal to
M!=12 # not equal to
# Trabajando con listas
proyecto <- list(meiofauna, M)
proyecto
# agregar nombres a una lista
proyecto <- list(Datos=meiofauna, Abundancia=M)
# Extrae información
meiofauna[c(1,4),]
Estacion <- c("Otoño", "Invierno", "Primavera","Verano")
Sitio <- as.factor(c("S1","S2","S3","S4"))
Densidad <- c(1000, NA, 0, 3000)
# Listar objetos
ls()
# Características o atributos de un objeto
class(Estacion)
length(Estacion)
names(Estacion)
is.na(Estacion)
# Elaborando un data.frame
meiofauna <- data.frame(Estacion, Sitio, Densidad)
# Atributos y exploración un data.frame
View(meiofauna)
dim(meiofauna)
class(meiofauna)
names(meiofauna)
summary(meiofauna)
str(meiofauna)
# Extrae información
meiofauna[c(1,4),]
meiofauna[c(1,4),"Sitio"]
meiofauna[c(1:2),"Densidad"]
meiofauna$Sitio
meiofauna$Sitio[-3] # excluye datos
# Trabajando con matrices
abundancia=c(1:24)
dim(abundancia)
M  = matrix(abundancia, ncol=4)
M
class(M)
dim(M) # dimensiones de una matriz
M[3,]
M[,c(1,2)]
mean(M)
summary(M)
M>=4 # greater than or equal to
M!=12 # not equal to
# Trabajando con listas
proyecto <- list(meiofauna, M)
proyecto
# agregar nombres a una lista
proyecto <- list(Datos=meiofauna, Abundancia=M)
proyecto
str(proyecto)
# Acceso a componentes de una lista
proyecto$Datos
proyecto$Abundancia
proyecto[[2]]
proyecto[["Nombre proyecto"]] = c("Meioinfoauna de Brasil")
# Remover objetos de la sesión de trabajo
rm(list = ls())
knitr::opts_chunk$set(echo = FALSE)
library(MASS)
library(psych)
library(ggplot2)
library(fishdata)
library(pander)
library(dplyr)
require(gridExtra)
library(grid)
knitr::include_graphics("Boxplot_no_parametrico.png")
knitr::opts_chunk$set(echo = FALSE)
library(MASS)
library(psych)
library("knitr")
library(Rlab)
knitr::include_graphics("fbernoulli.png")
ggplot(CO2, aes(uptake))
ggplot(CO2, aes(uptake))+
geom_histogram()+
labs(title="Histograma", x="Consumo de CO2",
y="Frecuencia")
ggplot(CO2, aes(x=Treatment, y=uptake))+
geom_boxplot()+
labs(title="Boxplot", x="Tratamiento",
y="Consumo de CO2")
ggplot(CO2, aes(uptake))+
geom_histogram(binwidth=1e5, position=position_dodge(1e5-20*(1e3))+
labs(title="Histograma", x="Consumo de CO2",
y="Frecuencia")
ggplot(CO2, aes(uptake))+
geom_histogram(binwidth=1e5)+
labs(title="Histograma", x="Consumo de CO2",
y="Frecuencia")
ggplot(CO2, aes(uptake))+
geom_histogram(binwidth=10)+
labs(title="Histograma", x="Consumo de CO2",
y="Frecuencia")
ggplot(CO2, aes(uptake))+
geom_histogram(binwidth=8)+
labs(title="Histograma", x="Consumo de CO2",
y="Frecuencia")
ggplot(CO2, aes(uptake))+
geom_histogram(binwidth=6)+
labs(title="Histograma", x="Consumo de CO2",
y="Frecuencia")
ggplot(CO2, aes(uptake))+
geom_histogram()+
labs(title="Histograma", x="Consumo de CO2",
y="Frecuencia")
ggplot(CO2, aes(uptake))+
geom_histogram(color="white", fill="blue")+
labs(title="Histograma", x="Consumo de CO2",
y="Frecuencia")
ggplot(CO2, aes(x=Treatment, y=uptake))+
geom_boxplot(color="white", fill="blue")+
labs(title="Boxplot", x="Tratamiento",
y="Consumo de CO2")
ggplot(CO2, aes(x=Treatment, y=uptake))+
geom_boxplot(color="blue")+
labs(title="Boxplot", x="Tratamiento",
y="Consumo de CO2")
# n = 1000 peces
# mu = 4 (Parásitos por pez)
# theta = 30 (número arbitrario para estimar la varianza)
parasitos <- rnegbin (1000, 14, 10)
# n = 1000 peces
# mu = 4 (Parásitos por pez)
# theta = 30 (número arbitrario para estimar la varianza)
parasitos <- data.frame(rnegbin(1000, 14, 10))
View(parasitos)
colnames(parasitos) <- parasitos
View(parasitos)
parasitos <- data.frame(rnegbin(1000, 14, 10))
colnames(parasitos) <- "parasitos"
View(parasitos)
ggplot(parasitos, aes(parasitos))+
geom_histogram(color="white", fill="blue")+
labs(title="Histograma", x="Consumo de CO2",
y="Frecuencia")
set.seed(123)
# n = 1000 peces
# mu = 4 (Parásitos por pez)
# theta = 30 (número arbitrario para estimar la varianza)
parasitos <- data.frame(rnegbin(1000, 14, 10))
colnames(parasitos) <- "parasitos"
ggplot(parasitos, aes(parasitos))+
geom_histogram(color="white", fill="blue", bins = 30)+
labs(title="Histograma", x="Consumo de CO2",
y="Frecuencia")
set.seed(123)
# n = 1000 peces
# mu = 4 (Parásitos por pez)
# theta = 30 (número arbitrario para estimar la varianza)
parasitos <- data.frame(rnegbin(1000, 14, 5))
colnames(parasitos) <- "parasitos"
ggplot(parasitos, aes(parasitos))+
geom_histogram(color="white", fill="blue", bins = 30)+
labs(title="Histograma", x="Consumo de CO2",
y="Frecuencia")
set.seed(123)
# n = 1000 peces
# mu = 4 (Parásitos por pez)
# theta = 30 (número arbitrario para estimar la varianza)
parasitos <- data.frame(rnegbin(500, 10, 5))
colnames(parasitos) <- "parasitos"
ggplot(parasitos, aes(parasitos))+
geom_histogram(color="white", fill="blue", bins = 30)+
labs(title="Histograma", x="Consumo de CO2",
y="Frecuencia")
set.seed(123)
# n = 1000 peces
# mu = 4 (Parásitos por pez)
# theta = 30 (número arbitrario para estimar la varianza)
parasitos <- data.frame(rnegbin(500, 10, 5))
colnames(parasitos) <- "parasitos"
ggplot(parasitos, aes(parasitos))+
geom_histogram(color="white", fill="blue", bins = 30)+
labs(title="Histograma", x="Parásitos",
y="Frecuencia")
set.seed(123)
# n = 1000 peces
# mu = 4 (Parásitos por pez)
# theta = 30 (número arbitrario para estimar la varianza)
parasitos <- data.frame(rnegbin(500, 10, 50))
colnames(parasitos) <- "parasitos"
ggplot(parasitos, aes(parasitos))+
geom_histogram(color="white", fill="blue", bins = 30)+
labs(title="Histograma", x="Parásitos",
y="Frecuencia")
set.seed(123)
# n = 1000 peces
# mu = 4 (Parásitos por pez)
# theta = 30 (número arbitrario para estimar la varianza)
parasitos <- data.frame(rnegbin(500, 10, 15))
colnames(parasitos) <- "parasitos"
ggplot(parasitos, aes(parasitos))+
geom_histogram(color="white", fill="blue", bins = 30)+
labs(title="Histograma", x="Parásitos",
y="Frecuencia")
set.seed(123)
# n = 1000 peces
# mu = 4 (Parásitos por pez)
# theta = 30 (número arbitrario para estimar la varianza)
parasitos <- data.frame(rnegbin(500, 10, 10))
colnames(parasitos) <- "parasitos"
ggplot(parasitos, aes(parasitos))+
geom_histogram(color="white", fill="blue", bins = 30)+
labs(title="Histograma", x="Parásitos",
y="Frecuencia")
set.seed(123)
# n = 1000 peces
# mu = 4 (Parásitos por pez)
# theta = 30 (número arbitrario para estimar la varianza)
parasitos <- data.frame(rnegbin(500, 10, 5))
colnames(parasitos) <- "parasitos"
ggplot(parasitos, aes(parasitos))+
geom_histogram(color="white", fill="blue", bins = 30)+
labs(title="Histograma", x="Parásitos",
y="Frecuencia")
knitr::include_graphics("fbernoulli.png")
knitr::include_graphics("fbernoulli.png")
rvpm <- rbinom(n, size=1, prob=0.06)
rvpm <- rbinom(500, size=1, prob=0.06)
hist(rvpm, col="red", main = "Histograma Intoxicación por VPM")
set.seed(123)
# n = 1000 peces
# mu = 4 (Parásitos por pez)
# theta = 30 (número arbitrario para estimar la varianza)
Data <- data.frame(rnegbin(500, 10, 5))
colnames(parasitos) <- "parasitos"
ggplot(parasitos, aes(parasitos))+
geom_histogram(color="white", fill="blue", bins = 30)+
labs(title="Histograma", x="Parásitos",
y="Frecuencia")
set.seed(123)
# n = 1000 peces
# mu = 4 (Parásitos por pez)
# theta = 30 (número arbitrario para estimar la varianza)
Data <- data.frame(rnegbin(500, 10, 5))
colnames(parasitos) <- "parasitos"
ggplot(Data, aes(parasitos))+
geom_histogram(color="white", fill="blue", bins = 30)+
labs(title="Histograma", x="Parásitos",
y="Frecuencia")
set.seed(123)
# n = 1000 peces
# mu = 4 (Parásitos por pez)
# theta = 30 (número arbitrario para estimar la varianza)
Dat <- data.frame(rnegbin(500, 10, 5))
colnames(parasitos) <- "parasitos"
ggplot(Dat, aes(parasitos))+
geom_histogram(color="white", fill="blue", bins = 30)+
labs(title="Histograma", x="Parásitos",
y="Frecuencia")
View(Dat)
set.seed(123)
# n = 1000 peces
# mu = 4 (Parásitos por pez)
# theta = 30 (número arbitrario para estimar la varianza)
Datos <- data.frame(rnegbin(500, 10, 5))
colnames(Datos) <- "parasitos"
ggplot(Datos, aes(parasitos))+
geom_histogram(color="white", fill="blue", bins = 30)+
labs(title="Histograma", x="Parásitos",
y="Frecuencia")
ggplot(Datos, aes(parasitos))
ggplot(Datos, aes(parasitos))+
geom_histogram(color="white", fill="blue", bins = 30)
ggplot(Datos, aes(parasitos))+
geom_histogram(color="white", fill="blue", bins = 30)+
labs(title="Histograma", x="Parásitos",
y="Frecuencia")
ggplot(Datos, aes(parasitos))+
geom_histogram(color="white", fill="blue", bins = 30)
# Simular variable con distribución Bernoulli
rvpm <- rbinom(500, size=1, prob=0.06)
# Simular variable con distribución Bernoulli
rvpm <- data.frame(rbinom(500, size=1, prob=0.06))
View(rvpm)
colnames(Datos) <- "Muertos"
View(rvpm)
# Simular variable con distribución Bernoulli
rvpm <- data.frame(rbinom(500, size=1, prob=0.06))
colnames(rvpm) <- "Muertos"
View(rvpm)
# Histrograma con ggplot y colores
ggplot(CO2, aes(uptake))+
geom_histogram(color="white", fill="blue")
# Agregamos titulo y nombre de los ejes
ggplot(CO2, aes(uptake))+
geom_histogram(color="white", fill="blue", bins = 30)+
labs(title="Histograma", x="Consumo de CO2",
y="Frecuencia")
# Histrograma con ggplot y colores
ggplot(CO2, aes(uptake))+
geom_histogram(color="white", fill="blue")
# Agregamos titulo y nombre de los ejes
ggplot(CO2, aes(uptake))+
geom_histogram(color="white", fill="blue", bins = 30)+
labs(title="Histograma", x="Consumo de CO2",
y="Frecuencia")
# Agregamos titulo y nombre de los ejes
ggplot(CO2, aes(uptake))+
geom_histogram(color="white", fill="blue", bins = 10)+
labs(title="Histograma", x="Consumo de CO2",
y="Frecuencia")
# Histrograma con ggplot y colores
ggplot(CO2, aes(uptake))+
geom_histogram(color="white", fill="blue")
# Histrograma con ggplot.
ggplot(CO2, aes(uptake))+
geom_histogram()
table(rvpm)
knitr::opts_chunk$set(echo = FALSE)
library(readxl)
library(stats)
library(graphics)
library(Rlab)
library(MASS)
table(rvpm)
n*p
n*p*q
