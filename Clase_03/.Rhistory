knitr::opts_chunk$set(echo = FALSE)
library(dplyr)
library(readxl)
library(ggplot2)
library(tidyr)
knitr::include_graphics("data-science-explore.png")
knitr::include_graphics("paquetes.png")
knitr::include_graphics("pipe.png")
knitr::include_graphics("pipe.jpeg")
knitr::include_graphics("pipe.png")
# ESTUDIO DE CASO: MUESTREO DE PECES
peces <- read_excel("Peces.xlsx") # Carga el set de datos
View(peces)
# Habilita librerías
library(readxl) # Para importar datos a R
library(dplyr) # Para manipular datos
library(ggplot2) # Para hacer gráficos
library(tidyr) # Para manipular datos
# ESTUDIO DE CASO: MUESTREO DE PECES
peces <- read_excel("Peces.xlsx") # Carga el set de datos
head(peces)  # Muestra los primeros datos del data set
summary(peces)
View(peces)
peces %>% spread(key = Especie, value = Parasitos)
peces %>% spread(key = Sexo, value = Parasitos)
peces %>% spread(key = Especie, value = Parasitos)
peces %>% spread(key = Especie, value = Parasitos)
# ESTUDIO DE CASO: MUESTREO DE PECES
messy <- read_excel("Peces.xlsx") # Carga el set de datos
View(messy)
# ESTUDIO DE CASO: MUESTREO DE PECES
messy <- read_excel("Peces.xlsx") # Carga el set de datos
head(messy)  # Muestra los primeros datos del data set
summary(messy)
messy <- read_excel("Peces.xlsx", na="NA")
summary(messy)
head(messy)  # Muestra los primeros datos del data set
messy %>% filter(Variable == "peso")
messy %>% filter(Variable == "peso") %>% gather("Especie","Peso",3:5)
muestreo <- messy %>% filter(Variable == "peso") %>% gather("Especie","Peso",3:5)
View(muestreo)
muestreo <- messy %>% filter(Variable == "peso") %>% gather("Especie","Peso",3:5, -Variable)
View(muestreo)
View(peces)
View(messy)
View(muestreo)
muestreo <- muestreo(-Variable,)
muestreo <- data.frame(,-Variable)
muestreo <- data.frame(,-"Variable")
muestreo <- muestreo[,-"Variable"]
View(muestreo)
muestreo <- muestreo[,-1]
View(muestreo)
colnames(muestreo$Replica) <- peces
View(muestreo)
View(muestreo)
colnames(muestreo$Replica) <- "peces"
colnames(muestreo)
colnames(muestreo)[1] <- "peces"
View(muestreo)
muestreo$peces <- c(1:9)
View(muestreo)
# Colapsar columna Especie
messy %>% filter(Variable == "peso") %>% gather("Especie","Peso",3:5)
# Crear objeto Peso
Peso <- messy %>% filter(Variable == "peso") %>% gather("Especie","Peso",3:5)
# Eliminar columna "variable" y renombrar variable réplica.
Peso <- Peso[,-1]
colnames(Peso)[1] <- "peces"
Peso$peces <- c(1:9)
View(Peso)
# Filtrar variable parasitos con tubería
messy %>% filter(Variable == "parasitos")
# Colapsar columna Especie
messy %>% filter(Variable == "parasitos") %>% gather("Especie","Peso",3:5)
# Crear objeto Parasitos
Parasitos <- messy %>% filter(Variable == "parasitos") %>% gather("Especie","Peso",3:5)
# Eliminar columna "variable" y renombrar variable réplica.
Parsitos <- Parasitos[,-1]
colnames(Parasitos)[1] <- "peces"
Parasitos$peces <- c(1:9)
View(Parsitos)
View(Parasitos)
View(Parsitos)
Parasitos$parasitos <- c(1:9)
# Eliminar columna "variable" y renombrar variable réplica.
Parasitos <- Parasitos[,-1]
colnames(Parasitos)[1] <- "peces"
Parasitos$parasitos <- c(1:9)
View(Parasitos)
# Filtrar variable parasitos con tubería
messy %>% filter(Variable == "parasitos")
# Colapsar columna Especie
messy %>% filter(Variable == "parasitos") %>% gather("Especie","Peso",3:5)
# Crear objeto Parasitos
Parasitos <- messy %>% filter(Variable == "parasitos") %>% gather("Especie","Parasitos",3:5)
View(Parasitos)
# Eliminar columna "variable" y renombrar variable réplica.
Parasitos <- Parasitos[,-1]
colnames(Parasitos)[1] <- "peces"
Parasitos$parasitos <- c(1:9)
View(Parasitos)
# Importar messy datos con datos faltantes
messy <- read_excel("Peces.xlsx", na="NA")
# Filtrar variable parasitos con tubería
messy %>% filter(Variable == "parasitos")
# Colapsar columna Especie
messy %>% filter(Variable == "parasitos") %>% gather("Especie","Peso",3:5)
# Crear objeto Parasitos
Parasitos <- messy %>% filter(Variable == "parasitos") %>% gather("Especie","Parasitos",3:5)
# Colapsar columna Especie
messy %>% filter(Variable == "parasitos") %>% gather("Especie","Parasitos",3:5)
# Crear objeto Parasitos
Parasitos <- messy %>% filter(Variable == "parasitos") %>% gather("Especie","Parasitos",3:5)
View(Parasitos)
# Eliminar columna "variable" y renombrar variable réplica.
Parasitos <- Parasitos[,-1]
colnames(Parasitos)[1] <- "peces"
Parasitos$parasitos <- c(1:9)
View(Parasitos)
# Filtrar variable parasitos con tubería
messy %>% filter(Variable == "parasitos")
# Colapsar columna Especie
messy %>% filter(Variable == "parasitos") %>% gather("Especie","Parasitos",3:5)
View(messy)
# Importar messy datos con datos faltantes
messy <- read_excel("Peces.xlsx", na="NA")
View(messy)
# Filtrar variable parasitos con tubería
messy1 %>% filter(Variable == "parasitos")
# Filtrar variable parasitos con tubería
messy %>% filter(Variable == "parasitos")
# Colapsar columna Especie
messy %>% filter(Variable == "parasitos") %>% gather("Especie","parasitos",3:5)
View(messy)
# Crear objeto Parasitos
Parasitos <- messy %>% filter(Variable == "parasitos") %>% gather("Especie","parasitos",3:5)
View(Parasitos)
# Eliminar columna "variable" y renombrar variable réplica.
Parasitos <- Parasitos[,-1]
View(Parasitos)
colnames(Replica)[1] <- "peces"
Parasitos$Replica <- c(1:9)
View(Parasitos)
colnames(Parasitos)[1] <- "peces"
View(Parasitos)
Parasitos$Replica <- c(1:9)
View(Parasitos)
Parasitos$peces <- c(1:9)
View(Parasitos)
# Filtrar variable peso con tubería
messy %>% filter(Variable == "peso")
# Colapsar columna Especie
messy %>% filter(Variable == "peso") %>% gather("Especie","Peso",3:5)
# Crear objeto Peso
Peso <- messy %>% filter(Variable == "peso") %>% gather("Especie","Peso",3:5)
# Eliminar columna "variable" y renombrar variable réplica.
Peso <- Peso[,-1]
colnames(Peso)[1] <- "peces"
Peso$peces <- c(1:9)
View(Parasitos)
# RESPUESTA
# Filtrar variable parasitos con tubería
messy %>% filter(Variable == "parasitos")
# Colapsar columna Especie
messy %>% filter(Variable == "parasitos") %>% gather("Especie","parasitos",3:5)
# Crear objeto Parasitos
Parasitos <- messy %>% filter(Variable == "parasitos") %>% gather("Especie","parasitos",3:5)
# Eliminar columna "variable" y renombrar variable réplica.
Parasitos <- Parasitos[,-1]
colnames(Parasitos)[1] <- "peces"
Parasitos$peces <- c(1:9)
View(Parasitos)
View(Peso)
left_join(Peso, Parasitos, "peces")
# Unir Objetos Peso, Parasitos y Sexo.
sexo <- read_excel("Peces.xlsx", sheet = 2)
View(sexo)
data <- left_join(Peso, Parasitos, "peces")
View(data)
new_data <- left_join(data, Sexo, "peces")
new_data <- left_join(data, sexo, "peces")
View(data)
View(sexo)
# Unir Objetos Peso, Parasitos y Sexo.
sexo <- read_excel("Peces.xlsx", sheet = 2)
data <- left_join(Peso, Parasitos, "peces")
new_data <- left_join(data, sexo, "peces")
View(new_data)
tidy_data <- left_join(data, sexo, "peces")
View(tidy_data)
# Eliminar y transformar columnas.
tidy_data <- tidy_data[,-c("Especie.y")]
# Eliminar y transformar columnas.
tidy_data <- tidy_data[,-"Especie.y"]
# Eliminar y transformar columnas.
tidy_data <- tidy_data[,-4]
View(tidy_data)
colnames(tidy_data)[2] <- "Especie"
tidy_data <- tidy_data[, c(1, 2, 5, 3, 4)]
View(tidy_data)
# FUNCIÓN SELECT()
# Permite extraer o seleccionar variables/columnas específicas de un data.frame.
select(tidy_data, Especie, Sexo)
# FUNCIÓN SELECT() CON PIPE
tidy_data %>% select(Especie, Sexo)
# FUNCIÓN FILTER() CON PIPE
# **filter()**: Para filtrar desde una tabla de datos un subconjunto de filas.
# Ej. solo un nivel de de un factor, observaciones que cumplen algún criterio (ej. > 20).
tidy_data %>% filter(Sexo == "Macho")
# MÚLTIPLES FUNCIONES Y TUBERÍAS
tidy_data %>% select(Especie, Sexo, Peso) %>%
filter(Sexo == "Macho")
tidy_data %>% select(Especie, Sexo, Peso, Parasitos) %>%
summarize(n = n(),
Promedio_Peso = mean(Peso),
Maximo_Parasitos = max(Parasitos))
tidy_data %>% select(Especie, Sexo, Peso, parasitos) %>%
summarize(n = n(),
Promedio_Peso = mean(Peso),
Maximo_Parasitos = max(parasitos))
tidy_data %>% select(Especie, Sexo, Peso, parasitos) %>%
summarize(n = n(),
Promedio_Peso = mean(Peso),
Maximo_Parasitos = max(parasitos),
na.rm = TRUE)
tidy_data %>% select(Especie, Sexo, Peso, parasitos) %>%
summarize(n = n(),
Promedio_Peso = mean(Peso, na.rm=T),
Maximo_Parasitos = max(parasitos, na.rm=T))
peces %>% group_by(Especie) %>%
summarize(n = n(),
Promedio_Peso = mean(Peso, na.rm=T),
Maximo_Parasitos = max(Parasitos, na.rm=T))
tidy_data %>% group_by(Especie) %>%
summarize(n = n(),
Promedio_Peso = mean(Peso, na.rm=T),
Maximo_Parasitos = max(Parasitos, na.rm=T))
tidy_data %>% group_by(Especie) %>%
summarize(n = n(),
Promedio_Peso = mean(Peso, na.rm=T),
Maximo_Parasitos = max(parasitos, na.rm=T))
# FUNCIÓN SUMMARIZE()
tidy_data %>% select(Especie, Sexo, Pesos) %>%
summarize(n = n(),
Promedio_Peso = mean(Peso),
Maximo_Peso = max(Peso))
tidy_data %>% select(Especie, Sexo, Peso) %>%
summarize(n = n(),
Promedio_Peso = mean(Peso),
Maximo_Peso = max(Peso))
# FUNCIÓN SUMMARIZE() removiendo NA
tidy_data %>% select(Especie, Sexo, Peso) %>%
summarize(n = n(),
Promedio_Peso = mean(Peso, na.rm=T),
Maximo_Parasitos = max(Peso, na.rm=T))
# FUNCIÓN SUMMARIZE() removiendo NA
tidy_data %>% select(Especie, Sexo, Peso) %>%
summarize(n = n(),
Promedio_Peso = mean(Peso, na.rm=T),
Maximo_Peso = max(Peso, na.rm=T))
tidy_data %>% group_by(Especie) %>%
summarize(n = n(),
Promedio_Peso = mean(Peso, na.rm=T),
Maximo_Parasitos = max(Peso, na.rm=T))
tidy_data %>% group_by(Especie) %>%
summarize(n = n(),
Promedio_Peso = mean(Peso, na.rm=T),
Maximo_Peso = max(Peso, na.rm=T))
tidy_data %>% select(Especie, Peso, parasitos) %>%
mutate(Densidad_parasitos = parasitos/Peso)
# HACER PLOT CON GGPLOT2
ggplot(datos, aes(x=Peso, y=Parasitos))+
geom_point(size= I(2))+
labs(x= "Peso(g)", y= "Cantidad de parásitos")+
theme_bw()
# HACER PLOT CON GGPLOT2
ggplot(tidy_data, aes(x=Peso, y=parasitos))+
geom_point(size= I(2))+
labs(x= "Peso(g)", y= "Cantidad de parásitos")+
theme_bw()
# Habilita librerías
library(readxl) # Para importar datos a R
library(dplyr) # Para manipular datos
library(ggplot2) # Para hacer gráficos
library(tidyr) # Para manipular datos
x <- rnorm(5)
y <- rnorm(5)
dat <- data.frame(x,y)
dat
max(dat)
dat %>% max
dat %>% arrange(y) # Ordena filas de un data.frame por el valor de alguna columna
# Importar messy datos
messy <- read_excel("Peces.xlsx") # Carga el set de datos
summary(messy)
# Importar messy datos con datos faltantes
messy <- read_excel("Peces.xlsx", na="NA")
summary(messy)
head(messy)  # Muestra los primeros datos del data set
# Filtrar variable peso con tubería
messy %>% filter(Variable == "peso")
# Colapsar columna Especie
messy %>% filter(Variable == "peso") %>% gather("Especie","Peso",3:5)
# Crear objeto Peso
Peso <- messy %>% filter(Variable == "peso") %>% gather("Especie","Peso",3:5)
# Eliminar columna "variable" y renombrar variable réplica.
Peso <- Peso[,-1]
colnames(Peso)[1] <- "peces"
Peso$peces <- c(1:9)
head(Peso)
messy %>% filter(Variable == "parasitos")
# Colapsar columna Especie
messy %>% filter(Variable == "parasitos") %>% gather("Especie","parasitos",3:5)
# Crear objeto Parasitos
Parasitos <- messy %>% filter(Variable == "parasitos") %>% gather("Especie","parasitos",3:5)
# Eliminar columna "variable" y renombrar variable réplica.
Parasitos <- Parasitos[,-1]
colnames(Parasitos)[1] <- "peces"
Parasitos$peces <- c(1:9)
# Unir Objetos Peso, Parasitos y Sexo.
sexo <- read_excel("Peces.xlsx", sheet = 2)
head(sexo)
data <- left_join(Peso, Parasitos, "peces")
tidy_data <- left_join(data, sexo, "peces")
head(tidy_data)
# Eliminar y transformar columnas.
tidy_data <- tidy_data[,-4]
colnames(tidy_data)[2] <- "Especie"
tidy_data <- tidy_data[, c(1, 2, 5, 3, 4)]
head(tidy_data)
# FUNCIÓN SELECT()
# Permite extraer o seleccionar variables/columnas específicas de un data.frame.
select(tidy_data, Especie, Sexo)
# FUNCIÓN SELECT() CON PIPE
tidy_data %>% select(Especie, Sexo)
# FUNCIÓN FILTER() CON PIPE
# **filter()**: Para filtrar desde una tabla de datos un subconjunto de filas.
# Ej. solo un nivel de de un factor, observaciones que cumplen algún criterio (ej. > 20).
tidy_data %>% filter(Sexo == "Macho")
# MÚLTIPLES FUNCIONES Y TUBERÍAS
tidy_data %>% select(Especie, Sexo, Peso) %>%
filter(Sexo == "Macho")
# FUNCIÓN SUMMARIZE()
tidy_data %>% select(Especie, Sexo, Peso) %>%
summarize(n = n(),
Promedio_Peso = mean(Peso),
Maximo_Peso = max(Peso))
# FUNCIÓN SUMMARIZE() removiendo NA
tidy_data %>% select(Especie, Sexo, Peso) %>%
summarize(n = n(),
Promedio_Peso = mean(Peso, na.rm=T),
Maximo_Peso = max(Peso, na.rm=T))
# FUNCIÓN SUMMARIZE() + GROUP_BY()
# Permite agrupar filas con base a los niveles de alguna variable o factor.
tidy_data %>% group_by(Especie) %>%
summarize(n = n(),
Promedio_Peso = mean(Peso, na.rm=T),
Maximo_Peso = max(Peso, na.rm=T))
tidy_data %>% select(Especie, Peso, parasitos) %>%
mutate(Densidad_parasitos = parasitos/Peso)
# HACER PLOT CON GGPLOT2
ggplot(tidy_data, aes(x=Peso, y=parasitos))+
geom_point(size= I(2))+
labs(x= "Peso(g)", y= "Número de parásitos")+
theme_bw()
# Importar messy datos
messy <- read_excel("Peces.xlsx") # Carga el set de datos
summary(messy)
# Importar messy datos con datos faltantes
messy <- read_excel("Peces.xlsx", na="NA")
summary(messy)
head(messy)  # Muestra los primeros datos del data set
# Filtrar variable peso con tubería
messy %>% filter(Variable == "peso")
# Colapsar columna Especie
messy %>% filter(Variable == "peso") %>% gather("Especie","Peso",3:5)
# Crear objeto Peso
Peso <- messy %>% filter(Variable == "peso") %>% gather("Especie","Peso",3:5)
# Eliminar columna "variable" y renombrar variable réplica.
Peso <- Peso[,-1]
colnames(Peso)[1] <- "peces"
Peso$peces <- c(1:9)
head(Peso)
# EJERCICIO
# RESPUESTA ORDENAR PARASITOS
# Filtrar variable parasitos con tubería
messy %>% filter(Variable == "parasitos")
# Colapsar columna Especie
messy %>% filter(Variable == "parasitos") %>% gather("Especie","parasitos",3:5)
# Crear objeto Parasitos
Parasitos <- messy %>% filter(Variable == "parasitos") %>% gather("Especie","parasitos",3:5)
# Eliminar columna "variable" y renombrar variable réplica.
Parasitos <- Parasitos[,-1]
colnames(Parasitos)[1] <- "peces"
Parasitos$peces <- c(1:9)
# Unir Objetos Peso, Parasitos y Sexo.
sexo <- read_excel("Peces.xlsx", sheet = 2)
head(sexo)
data <- left_join(Peso, Parasitos, "peces")
tidy_data <- left_join(data, sexo, "peces")
head(tidy_data)
# Eliminar y transformar columnas.
tidy_data <- tidy_data[,-4]
colnames(tidy_data)[2] <- "Especie"
tidy_data <- tidy_data[, c(1, 2, 5, 3, 4)]
head(tidy_data)
# FUNCIÓN SELECT()
# Permite extraer o seleccionar variables/columnas específicas de un data.frame.
select(tidy_data, Especie, Sexo)
# FUNCIÓN SELECT() CON PIPE
tidy_data %>% select(Especie, Sexo)
# FUNCIÓN FILTER() CON PIPE
# **filter()**: Para filtrar desde una tabla de datos un subconjunto de filas.
# Ej. solo un nivel de de un factor, observaciones que cumplen algún criterio (ej. > 20).
tidy_data %>% filter(Sexo == "Macho")
# MÚLTIPLES FUNCIONES Y TUBERÍAS
tidy_data %>% select(Especie, Sexo, Peso) %>%
filter(Sexo == "Macho")
# FUNCIÓN SUMMARIZE()
tidy_data %>% select(Especie, Sexo, Peso) %>%
summarize(n = n(),
Promedio_Peso = mean(Peso),
Maximo_Peso = max(Peso))
# FUNCIÓN SUMMARIZE() removiendo NA
tidy_data %>% select(Especie, Sexo, Peso) %>%
summarize(n = n(),
Promedio_Peso = mean(Peso, na.rm=T),
Maximo_Peso = max(Peso, na.rm=T))
# FUNCIÓN SUMMARIZE() + GROUP_BY()
# Permite agrupar filas con base a los niveles de alguna variable o factor.
tidy_data %>% group_by(Especie) %>%
summarize(n = n(),
Promedio_Peso = mean(Peso, na.rm=T),
Maximo_Peso = max(Peso, na.rm=T))
# FUNCIÓN MUTATE()
# Permite calcular nuevas variables "derivadas", ej. proporciones, tasas, log.
tidy_data %>% select(Especie, Peso, parasitos) %>%
mutate(Densidad_parasitos = parasitos/Peso)
# HACER PLOT CON GGPLOT2
ggplot(tidy_data, aes(x=Peso, y=parasitos))+
geom_point(size= I(2))+
labs(x= "Peso(g)", y= "Número de parásitos")+
theme_bw()
